<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/</link>
    <description>Recent content in Usage on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proxy Startup</title>
      <link>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/startup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/startup/</guid>
      <description>Startup Steps  Download the latest version of ShardingSphere-Proxy. If users use docker, they can implement docker pull shardingsphere/shardingsphere-proxy to get the clone. Please refer to Docker Clone for more details. After the decompression, revise conf/server.yaml and documents begin with config- prefix, conf/config-xxx.yaml for example, to configure sharding rules and replica query rules. Please refer to Configuration Manual for the configuration method. Please run bin/start.sh for Linux operating system; run bin/start.</description>
    </item>
    
    <item>
      <title>Governance</title>
      <link>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/governance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/governance/</guid>
      <description>ShardingSphere-Proxy use SPI to support Governance, realize the unified management of configurations and metadata, as well as instance disabling and replica disabling.
Zookeeper ShardingSphere-Proxy has provided the solution of Zookeeper in default, which implements the functions of config center, registry center. Configuration Rules consistent with ShardingSphere-JDBC YAML.
Other Third Party Components Refer to Supported Third Party Components for details.
 Use SPI methods in logic coding and put the generated jar package to the lib folder of ShardingSphere-Proxy.</description>
    </item>
    
    <item>
      <title>Distributed Transaction</title>
      <link>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/transaction/</guid>
      <description>ShardingSphere-Proxy supports LOCAL, XA, BASE transactions, LOCAL transaction is default value, it is original transaction of relational database.
XA transaction Default XA transaction manager of ShardingSphere is Atomikos. Users can customize Atomikos configuration items through adding jta.properties in conf catalog of ShardingSphere-Proxy. Please refer to Official Documents of Atomikos for detailed configurations.
BASE Transaction Since we have not packed the BASE implementation jar into ShardingSphere-Proxy, you should copy relevant jar which implement ShardingTransactionManager SPI to conf/lib, then switch the transaction type to BASE.</description>
    </item>
    
    <item>
      <title>SCTL</title>
      <link>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/sctl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/en/user-manual/shardingsphere-proxy/usage/sctl/</guid>
      <description>SCTL (ShardingSphere-Proxy control language) supports modify and query the state of Sharing-Proxy at runtime. The current supported syntax is:
   Statement Function Example     sctl:set transaction_type=XX Modify transaction_type of the current connection, supports LOCAL, XA, BASE sctl:set transaction_type=XA   sctl:show transaction_type Query the transaction type of the current connection sctl:show transaction_type   sctl:show cached_connections Query the number of cached physical database connections in the current connection sctl:show cached_connections   sctl:explain SQL View the execution plan for logical SQL.</description>
    </item>
    
  </channel>
</rss>