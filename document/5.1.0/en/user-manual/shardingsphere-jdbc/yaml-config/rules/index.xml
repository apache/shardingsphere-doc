<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rules on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/</link>
    <description>Recent content in Rules on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sharding</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sharding/</guid>
      <description>Configuration Item Explanation rules: - !SHARDING tables: # Sharding table configuration &amp;lt;logic-table-name&amp;gt; (+): # Logic table name actualDataNodes (?): # Describe data source names and actual tables (refer to Inline syntax rules) databaseStrategy (?): # Databases sharding strategy, use default databases sharding strategy if absent. sharding strategy below can choose only one. standard: # For single sharding column scenario shardingColumn: # Sharding column name shardingAlgorithmName: # Sharding algorithm name complex: # For multiple sharding columns scenario shardingColumns: # Sharding column names, multiple columns separated with comma shardingAlgorithmName: # Sharding algorithm name hint: # Sharding by hint shardingAlgorithmName: # Sharding algorithm name none: # Do not sharding tableStrategy: # Tables sharding strategy, same as database sharding strategy keyGenerateStrategy: # Key generator strategy column: # Column name of key generator keyGeneratorName: # Key generator name autoTables: # Auto Sharding table configuration t_order_auto: # Logic table name actualDataSources (?</description>
    </item>
    
    <item>
      <title>Readwrite-splitting</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/readwrite-splitting/</guid>
      <description>Configuration Item Explanation rules: - !READWRITE_SPLITTING dataSources: &amp;lt;data-source-name&amp;gt; (+): # Logic data source name of readwrite-splitting type: # Readwrite-splitting type, such as: Static, Dynamic props: auto-aware-data-source-name: # Auto aware data source name(Use with database discovery) write-data-source-name: # Write data source name read-data-source-names: # Read data source names, multiple data source names separated with comma loadBalancerName: # Load balance algorithm name # Load balance algorithm configuration loadBalancers: &amp;lt;load-balancer-name&amp;gt; (+): # Load balance algorithm name type: # Load balance algorithm type props: # Load balance algorithm properties # .</description>
    </item>
    
    <item>
      <title>Encryption</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/encrypt/</guid>
      <description>Configuration Item Explanation rules: - !ENCRYPT tables: &amp;lt;table-name&amp;gt; (+): # Encrypt table name columns: &amp;lt;column-name&amp;gt; (+): # Encrypt logic column name cipherColumn: # Cipher column name assistedQueryColumn (?): # Assisted query column name encryptorName: # Encrypt algorithm name # Encrypt algorithm configuration encryptors: &amp;lt;encrypt-algorithm-name&amp;gt; (+): # Encrypt algorithm name type: # Encrypt algorithm type props: # Encrypt algorithm properties # ... Please refer to Built-in Encrypt Algorithm List for more details about type of algorithm.</description>
    </item>
    
    <item>
      <title>Shadow DB</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/shadow/</guid>
      <description>Configuration Item Explanation rules: - !SHADOW dataSources: shadowDataSource: sourceDataSourceName: # Production data source name shadowDataSourceName: # Shadow data source name tables: &amp;lt;table-name&amp;gt;: dataSourceNames: # Shadow table location shadow data source names - &amp;lt;shadow-data-source&amp;gt; shadowAlgorithmNames: # Shadow table location shadow algorithm names - &amp;lt;shadow-algorithm-name&amp;gt; defaultShadowAlgorithmName: # Default shadow algorithm name shadowAlgorithms: &amp;lt;shadow-algorithm-name&amp;gt; (+): # Shadow algorithm name type: # Shadow algorithm type props: # Shadow algorithm property configuration # ... </description>
    </item>
    
    <item>
      <title>Mixed Rules</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/mix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/mix/</guid>
      <description>The overlay between rule items in a mixed configuration is associated by the data source name and the table name.
If the previous rule is aggregation-oriented, the next rule needs to use the aggregated logical data source name configured by the previous rule when configuring the data source. Similarly, if the previous rule is table aggregation-oriented, the next rule needs to use the aggregated logical table name configured by the previous rule when configuring the table.</description>
    </item>
    
    <item>
      <title>SQL-parser</title>
      <link>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.0/en/user-manual/shardingsphere-jdbc/yaml-config/rules/sql-parser/</guid>
      <description>Configuration Item Explanation rules: - !SQL_PARSER sqlCommentParseEnabled: # Whether to parse SQL comments  sqlStatementCache: # SQL statement local cache initialCapacity: # Initial capacity of local cache maximumSize: # Maximum capacity of local cache concurrencyLevel: # Local cache concurrency level, the maximum number of concurrent updates allowed by threads parseTreeCache: # Parse tree local cache initialCapacity: # Initial capacity of local cache maximumSize: # Maximum capacity of local cache concurrencyLevel: # Local cache concurrency level, the maximum number of concurrent updates allowed by threads </description>
    </item>
    
  </channel>
</rss>