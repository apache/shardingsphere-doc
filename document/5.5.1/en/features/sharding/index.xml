<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sharding on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/</link>
    <description>Recent content in Sharding on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Core Concept</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/concept/</guid>
      <description>Table Tables are a key concept for transparent data sharding. Apache ShardingSphere adapts to the data sharding requirements under different scenarios by providing diverse table types.
Logic Table The logical name of the horizontally sharded database (table) of the same structure is the logical identifier of the table in SQL. Example: Order data is split into 10 tables according to the primary key endings, are t_order_0 to t_order_9, and their logical table names are t_order.</description>
    </item>
    
    <item>
      <title>Limitations</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/limitation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/limitation/</guid>
      <description>Compatible with all commonly used SQL that routes to single data nodes; SQL routing to multiple data nodes is divided, because of complexity issues, into three conditions: stable support, experimental support, and no support.
Stable Support Full support for DML, DDL, DCL, TCL, and common DALs. Support for complex queries such as paging, de-duplication, sorting, grouping, aggregation, table association, etc. Support SCHEMA DDL and DML statements of PostgreSQL and openGauss database.</description>
    </item>
    
    <item>
      <title>Appendix with SQL operator</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/appendix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/features/sharding/appendix/</guid>
      <description>Limited supported SQL:
 When using getGeneratedKeys interface of JDBC specification to return auto-increment key, it is necessary to use a distributed key generator that supports auto-increment, and does not support other types of distributed key generators  Unsupported SQL:
 CASE WHEN contains sub-query Logical table names are used in CASE WHEN( Please use an alias) INSERT INTO tbl_name (col1, col2, â€¦) SELECT * FROM tbl_name WHERE col3 = ?</description>
    </item>
    
  </channel>
</rss>
