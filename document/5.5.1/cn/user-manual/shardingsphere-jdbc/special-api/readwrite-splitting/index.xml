<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读写分离 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-jdbc/special-api/readwrite-splitting/</link>
    <description>Recent content in 读写分离 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-jdbc/special-api/readwrite-splitting/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>强制路由</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-jdbc/special-api/readwrite-splitting/hint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-jdbc/special-api/readwrite-splitting/hint/</guid>
      <description>背景信息 Apache ShardingSphere 使用 ThreadLocal 管理主库路由标记进行强制路由。 可以通过编程的方式向 HintManager 中添加主库路由标记，该值仅在当前线程内生效。
Hint 在读写分离场景下，主要用于强制在主库进行某些数据操作。
操作步骤  调用 HintManager.getInstance() 获取 HintManager 实例； 调用 HintManager.setWriteRouteOnly() 方法设置主库路由标记； 执行 SQL 语句完成路由和执行； 调用 HintManager.close() 清理 ThreadLocal 中的内容。  配置示例 使用 Hint 强制主库路由 获取 HintManager 与基于 Hint 的数据分片相同。
设置主库路由 使用 hintManager.setWriteRouteOnly 设置主库路由。
清除分片键值 与基于 Hint 的数据分片相同。
完整代码示例 String sql = &amp;#34;SELECT * FROM t_order&amp;#34;; try (HintManager hintManager = HintManager.getInstance(); Connection conn = dataSource.getConnection(); PreparedStatement preparedStatement = conn.prepareStatement(sql)) { hintManager.setWriteRouteOnly(); try (ResultSet rs = preparedStatement.</description>
    </item>
    
  </channel>
</rss>
