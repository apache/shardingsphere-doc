<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shadow on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/</link>
    <description>Recent content in Shadow on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CREATE SHADOW RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/create-shadow-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/create-shadow-rule/</guid>
      <description>Description The CREATE SHADOW RULE syntax is used to create a shadow rule.
Syntax Grammar Railroad diagram  CreateShadowRule ::= &amp;#39;CREATE&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;RULE&amp;#39; ifNotExists? shadowRuleDefinition (&amp;#39;,&amp;#39; shadowRuleDefinition)* ifNotExists ::= &amp;#39;IF&amp;#39; &amp;#39;NOT&amp;#39; &amp;#39;EXISTS&amp;#39; shadowRuleDefinition ::= ruleName &amp;#39;(&amp;#39; storageUnitMapping shadowTableRule (&amp;#39;,&amp;#39; shadowTableRule)* &amp;#39;)&amp;#39; storageUnitMapping ::= &amp;#39;SOURCE&amp;#39; &amp;#39;=&amp;#39; storageUnitName &amp;#39;,&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;=&amp;#39; storageUnitName shadowTableRule ::= tableName &amp;#39;(&amp;#39; shadowAlgorithm &amp;#39;)&amp;#39; shadowAlgorithm ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; algorithmType &amp;#39;,&amp;#39; propertiesDefinition &amp;#39;)&amp;#39; ruleName ::= identifier storageUnitName ::= identifier tableName ::= identifier algorithmName ::= identifier algorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       Supplement  Duplicate ruleName cannot be created; storageUnitMapping specifies the mapping relationship between the source database and the shadow library.</description>
    </item>
    
    <item>
      <title>ALTER SHADOW RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/alter-shadow-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/alter-shadow-rule/</guid>
      <description>Description The ALTER SHADOW RULE syntax is used to alter shadow rule.
Syntax Grammar Railroad diagram  AlterShadowRule ::= &amp;#39;ALTER&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;RULE&amp;#39; shadowRuleDefinition (&amp;#39;,&amp;#39; shadowRuleDefinition)* shadowRuleDefinition ::= ruleName &amp;#39;(&amp;#39; storageUnitMapping shadowTableRule (&amp;#39;,&amp;#39; shadowTableRule)* &amp;#39;)&amp;#39; storageUnitMapping ::= &amp;#39;SOURCE&amp;#39; &amp;#39;=&amp;#39; storageUnitName &amp;#39;,&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;=&amp;#39; storageUnitName shadowTableRule ::= tableName &amp;#39;(&amp;#39; shadowAlgorithm &amp;#39;)&amp;#39; shadowAlgorithm ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; shadowAlgorithmType &amp;#39;,&amp;#39; propertiesDefinition &amp;#39;)&amp;#39; ruleName ::= identifier storageUnitName ::= identifier tableName ::= identifier algorithmName ::= identifier shadowAlgorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       Supplement  storageUnitMapping specifies the mapping relationship between the source database and the shadow library.</description>
    </item>
    
    <item>
      <title>DROP SHADOW RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-shadow-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-shadow-rule/</guid>
      <description>Description The DROP SHADOW RULE syntax is used to drop shadow rule for specified database
Syntax Grammar Railroad diagram  DropShadowRule ::= &amp;#39;DROP&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;RULE&amp;#39; ifExists? ruleName (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; ruleName ::= identifier databaseName ::= identifier       Supplement  When databaseName is not specified, the default is the currently used DATABASE. If DATABASE is not used, No database selected will be prompted; ifExists clause is used for avoid Shadow rule not exists error.</description>
    </item>
    
    <item>
      <title>CREATE DEFAULT SHADOW ALGORITHM</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/create-default-shadow-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/create-default-shadow-algorithm/</guid>
      <description>Description The CREATE DEFAULT SHADOW ALGORITHM syntax is used to create a default shadow algorithm.
Syntax Grammar Railroad diagram  CreateDefaultShadowAlgorithm ::= &amp;#39;CREATE&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;ALGORITHM&amp;#39; ifNotExists? shadowAlgorithm ifNotExists ::= &amp;#39;IF&amp;#39; &amp;#39;NOT&amp;#39; &amp;#39;EXISTS&amp;#39; shadowAlgorithm ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; algorithmType &amp;#39;,&amp;#39; propertiesDefiinition &amp;#39;)&amp;#39; algorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       Supplement  algorithmType currently supports VALUE_MATCH, REGEX_MATCH and SQL_HINT; ifNotExists clause is used for avoid Duplicate default shadow algorithm error.</description>
    </item>
    
    <item>
      <title>ALTER DEFAULT SHADOW ALGORITHM</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/alter-default-shadow-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/alter-default-shadow-algorithm/</guid>
      <description>Description The ALTER DEFAULT SHADOW ALGORITHM syntax is used to alter a default shadow algorithm.
Syntax Grammar Railroad diagram  AlterDefaultShadowAlgorithm ::= &amp;#39;ALTER&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;ALGORITHM&amp;#39; shadowAlgorithm shadowAlgorithm ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; algorithmType &amp;#39;,&amp;#39; propertiesDefiinition &amp;#39;)&amp;#39; algorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       Supplement  algorithmType currently supports VALUE_MATCH, REGEX_MATCH and SQL_HINT.</description>
    </item>
    
    <item>
      <title>DROP DEFAULT SHADOW ALGORITHM</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-default-shadow-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-default-shadow-algorithm/</guid>
      <description>Description The DROP DEFAULT SHADOW ALGORITHM syntax is used to drop default shadow algorithm for specified database
Syntax Grammar Railroad diagram  DropDefaultShadowAlgorithm ::= &amp;#39;DROP&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;ALGORITHM&amp;#39; ifExists? (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; databaseName ::= identifier       Supplement  When databaseName is not specified, the default is the currently used DATABASE. If DATABASE is not used, No database selected will be prompted; ifExists clause used for avoid Default shadow algorithm not exists error.</description>
    </item>
    
    <item>
      <title>DROP SHADOW ALGORITHM</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-shadow-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/en/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/shadow/drop-shadow-algorithm/</guid>
      <description>Description The DROP SHADOW ALGORITHM syntax is used to drop shadow algorithm for specified database
Syntax Grammar Railroad diagram  DropShadowAlgorithm ::= &amp;#39;DROP&amp;#39; &amp;#39;SHADOW&amp;#39; &amp;#39;ALGORITHM&amp;#39; ifExists? algorithmName (&amp;#39;,&amp;#39; algorithmName)* (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; algorithmName ::= identifier databaseName ::= identifier       Supplement  When databaseName is not specified, the default is the currently used DATABASE. If DATABASE is not used, No database selected will be prompted; ifExists clause is used for avoid shadow algorithm not exists error.</description>
    </item>
    
  </channel>
</rss>
