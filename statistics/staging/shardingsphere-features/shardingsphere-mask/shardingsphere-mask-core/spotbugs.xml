<?xml version='1.0' encoding='UTF-8'?>
<BugCollection version='4.7.2' threshold='medium' effort='default'><file classname='org.apache.shardingsphere.mask.algorithm.MaskAlgorithmPropsChecker'><BugInstance type='LEST_LOST_EXCEPTION_STACK_TRACE' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.mask.algorithm.MaskAlgorithmPropsChecker.checkIntegerTypeConfig(Properties, String, String) throws alternative exception from catch block without history' lineNumber='81'/></file><file classname='org.apache.shardingsphere.mask.algorithm.cover.KeepFirstNLastMMaskAlgorithm'><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.KeepFirstNLastMMaskAlgorithm.createFirstN(Properties) converts String to boxed primitive using excessive boxing' lineNumber='52'/><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.KeepFirstNLastMMaskAlgorithm.createLastM(Properties) converts String to boxed primitive using excessive boxing' lineNumber='57'/></file><file classname='org.apache.shardingsphere.mask.algorithm.cover.KeepFromXToYMaskAlgorithm'><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.KeepFromXToYMaskAlgorithm.createFromX(Properties) converts String to boxed primitive using excessive boxing' lineNumber='52'/><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.KeepFromXToYMaskAlgorithm.createToY(Properties) converts String to boxed primitive using excessive boxing' lineNumber='57'/></file><file classname='org.apache.shardingsphere.mask.algorithm.cover.MaskFirstNLastMMaskAlgorithm'><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.MaskFirstNLastMMaskAlgorithm.createFirstN(Properties) converts String to boxed primitive using excessive boxing' lineNumber='52'/><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.MaskFirstNLastMMaskAlgorithm.createLastM(Properties) converts String to boxed primitive using excessive boxing' lineNumber='57'/></file><file classname='org.apache.shardingsphere.mask.algorithm.cover.MaskFromXToYMaskAlgorithm'><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.MaskFromXToYMaskAlgorithm.createFromX(Properties) converts String to boxed primitive using excessive boxing' lineNumber='52'/><BugInstance type='NAB_NEEDLESS_BOXING_VALUEOF' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.mask.algorithm.cover.MaskFromXToYMaskAlgorithm.createToY(Properties) converts String to boxed primitive using excessive boxing' lineNumber='57'/></file><file classname='org.apache.shardingsphere.mask.algorithm.hash.MD5MaskAlgorithm'><BugInstance type='WEAK_MESSAGE_DIGEST_MD5' priority='High' category='SECURITY' message='This API MD5 (MDX) is not a recommended cryptographic hash function' lineNumber='41'/></file><file classname='org.apache.shardingsphere.mask.algorithm.replace.TelephoneRandomReplaceAlgorithm'><BugInstance type='LEST_LOST_EXCEPTION_STACK_TRACE' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.mask.algorithm.replace.TelephoneRandomReplaceAlgorithm.getNetworkNumber(String) throws alternative exception from catch block without history' lineNumber='89'/></file><file classname='org.apache.shardingsphere.mask.exception.algorithm.MaskAlgorithmInitializationException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.mask.exception.algorithm.MaskAlgorithmInitializationException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.mask.rule.MaskRule'><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.mask.rule.MaskRule.findMaskAlgorithm(String, String) checks a map with containsKey(), before using get()' lineNumber='62'/></file><file classname='org.apache.shardingsphere.mask.rule.MaskTable'><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.mask.rule.MaskTable.findMaskAlgorithmName(String) checks a map with containsKey(), before using get()' lineNumber='48'/></file><Error></Error><Project><SrcDir>/Users/nianjun/Work/Workspace/PR/shardingsphere/features/mask/core/src/main/java</SrcDir><SrcDir>/Users/nianjun/Work/Workspace/PR/shardingsphere/features/mask/core/src/test/java</SrcDir></Project></BugCollection>