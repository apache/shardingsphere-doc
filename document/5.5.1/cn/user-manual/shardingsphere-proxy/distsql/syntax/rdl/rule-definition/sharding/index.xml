<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分片 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/</link>
    <description>Recent content in 分片 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>CREATE SHARDING TABLE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-rule/</guid>
      <description>描述 CREATE SHARDING TABLE RULE 语法用于为当前所选逻辑库添加分片规则。
语法定义 语法 铁路图  CreateShardingTableRule ::= &amp;#39;CREATE&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;RULE&amp;#39; ifNotExists? (tableRuleDefinition | autoTableRuleDefinition) (&amp;#39;,&amp;#39; (tableRuleDefinition | autoTableRuleDefinition))* ifNotExists ::= &amp;#39;IF&amp;#39; &amp;#39;NOT&amp;#39; &amp;#39;EXISTS&amp;#39; tableRuleDefinition ::= ruleName &amp;#39;(&amp;#39; &amp;#39;DATANODES&amp;#39; &amp;#39;(&amp;#39; dataNode (&amp;#39;,&amp;#39; dataNode)* &amp;#39;)&amp;#39; (&amp;#39;,&amp;#39; &amp;#39;DATABASE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; strategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;TABLE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; strategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;KEY_GENERATE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; keyGenerateStrategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;AUDIT_STRATEGY&amp;#39; &amp;#39;(&amp;#39; auditStrategyDefinition &amp;#39;)&amp;#39;)? &amp;#39;)&amp;#39; autoTableRuleDefinition ::= ruleName &amp;#39;(&amp;#39; &amp;#39;STORAGE_UNITS&amp;#39; &amp;#39;(&amp;#39; storageUnitName (&amp;#39;,&amp;#39; storageUnitName)* &amp;#39;)&amp;#39; &amp;#39;,&amp;#39; &amp;#39;SHARDING_COLUMN&amp;#39; &amp;#39;=&amp;#39; columnName &amp;#39;,&amp;#39; algorithmDefinition (&amp;#39;,&amp;#39; &amp;#39;KEY_GENERATE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; keyGenerateStrategyDefinition &amp;#39;)&amp;#39;)?</description>
    </item>
    
    <item>
      <title>ALTER SHARDING TABLE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-rule/</guid>
      <description>描述 ALTER SHARDING TABLE RULE 语法用于修改当前所选逻辑库的分片规则。
语法定义 语法 铁路图  AlterShardingTableRule ::= &amp;#39;ALTER&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;RULE&amp;#39; (tableRuleDefinition | autoTableRuleDefinition) (&amp;#39;,&amp;#39; (tableRuleDefinition | autoTableRuleDefinition))* tableRuleDefinition ::= ruleName &amp;#39;(&amp;#39; &amp;#39;DATANODES&amp;#39; &amp;#39;(&amp;#39; dataNode (&amp;#39;,&amp;#39; dataNode)* &amp;#39;)&amp;#39; (&amp;#39;,&amp;#39; &amp;#39;DATABASE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; strategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;TABLE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; strategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;KEY_GENERATE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; keyGenerateStrategyDefinition &amp;#39;)&amp;#39;)? (&amp;#39;,&amp;#39; &amp;#39;AUDIT_STRATEGY&amp;#39; &amp;#39;(&amp;#39; auditStrategyDefinition &amp;#39;)&amp;#39;)? &amp;#39;)&amp;#39; autoTableRuleDefinition ::= ruleName &amp;#39;(&amp;#39; &amp;#39;STORAGE_UNITS&amp;#39; &amp;#39;(&amp;#39; storageUnitName (&amp;#39;,&amp;#39; storageUnitName)* &amp;#39;)&amp;#39; &amp;#39;,&amp;#39; &amp;#39;SHARDING_COLUMN&amp;#39; &amp;#39;=&amp;#39; columnName &amp;#39;,&amp;#39; algorithmDefinition (&amp;#39;,&amp;#39; &amp;#39;KEY_GENERATE_STRATEGY&amp;#39; &amp;#39;(&amp;#39; keyGenerateStrategyDefinition &amp;#39;)&amp;#39;)?</description>
    </item>
    
    <item>
      <title>DROP SHARDING TABLE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-rule/</guid>
      <description>描述 DROP SHARDING TABLE RULE 语法用于删除指定逻辑库的指定分片规则。
语法定义 语法 铁路图  DropShardingTableRule ::= &amp;#39;DROP&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;RULE&amp;#39; ifExists? ruleName (&amp;#39;,&amp;#39; ruleName)* (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; ruleName ::= identifier databaseName ::= identifier       补充说明  未指定 databaseName 时，默认是当前使用的 DATABASE。 如果也未使用 DATABASE 则会提示 No database selected； ifExists 子句用于避免 Sharding rule not exists 错误。  示例  为指定逻辑库删除多个指定分片规则  DROP SHARDING TABLE RULE t_order, t_order_item FROM sharding_db;  为当前逻辑库删除单个指定分片规则  DROP SHARDING TABLE RULE t_order;  使用 ifExists 子句删除分片规则  DROP SHARDING TABLE RULE IF EXISTS t_order; 保留字 DROP、SHARDING、TABLE、RULE、FROM</description>
    </item>
    
    <item>
      <title>CREATE DEFAULT SHARDING STRATEGY</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-default-sharding-strategy/</guid>
      <description>描述 CREATE DEFAULT SHARDING STRATEGY 语法用于创建默认的分片策略。
语法定义 语法 铁路图  CreateDefaultShardingStrategy ::= &amp;#39;CREATE&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHARDING&amp;#39; (&amp;#39;DATABASE&amp;#39; | &amp;#39;TABLE&amp;#39;) &amp;#39;STRATEGY&amp;#39; ifNotExists? &amp;#39;(&amp;#39; shardingStrategy &amp;#39;)&amp;#39; ifNotExists ::= &amp;#39;IF&amp;#39; &amp;#39;NOT&amp;#39; &amp;#39;EXISTS&amp;#39; shardingStrategy ::= &amp;#39;TYPE&amp;#39; &amp;#39;=&amp;#39; strategyType &amp;#39;,&amp;#39; (&amp;#39;SHARDING_COLUMN&amp;#39; &amp;#39;=&amp;#39; columnName | &amp;#39;SHARDING_COLUMNS&amp;#39; &amp;#39;=&amp;#39; columnNames) &amp;#39;,&amp;#39; &amp;#39;SHARDING_ALGORITHM&amp;#39; &amp;#39;=&amp;#39; algorithmDefinition strategyType ::= string algorithmDefinition ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; algorithmType &amp;#39;,&amp;#39; propertiesDefinition &amp;#39;)&amp;#39; columnNames ::= columnName (&amp;#39;,&amp;#39; columnName)+ columnName ::= identifier algorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       补充说明  当使用复合分片算法时，需要通过 SHARDING_COLUMNS 指定多个分片键； algorithmType 为分片算法类型，详细的分片算法类型信息请参考分片算法； ifNotExists 子句用于避免出现 Duplicate default sharding strategy 错误。  示例  创建默认分表策略  CREATE DEFAULT SHARDING TABLE STRATEGY ( TYPE=&amp;#34;standard&amp;#34;, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES(&amp;#34;algorithm-expression&amp;#34;=&amp;#34;t_order_${user_id % 2}&amp;#34;))) );  使用 ifNotExists 创建默认分表策略  CREATE DEFAULT SHARDING TABLE STRATEGY IF NOT EXISTS ( TYPE=&amp;#34;standard&amp;#34;, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES(&amp;#34;algorithm-expression&amp;#34;=&amp;#34;t_order_${user_id % 2}&amp;#34;))) ); 保留字 CREATE、DEFAULT、SHARDING、DATABASE、TABLE、STRATEGY、TYPE、SHARDING_COLUMN、SHARDING_COLUMNS、SHARDING_ALGORITHM、NAME、PROPERTIES</description>
    </item>
    
    <item>
      <title>ALTER DEFAULT SHARDING STRATEGY</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-default-sharding-strategy/</guid>
      <description>描述 ALTER DEFAULT SHARDING STRATEGY 语法用于修改默认的分片策略。
语法定义 语法 铁路图  AlterDefaultShardingStrategy ::= &amp;#39;ALTER&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHARDING&amp;#39; (&amp;#39;DATABASE&amp;#39; | &amp;#39;TABLE&amp;#39;) &amp;#39;STRATEGY&amp;#39; &amp;#39;(&amp;#39; shardingStrategy &amp;#39;)&amp;#39; shardingStrategy ::= &amp;#39;TYPE&amp;#39; &amp;#39;=&amp;#39; strategyType &amp;#39;,&amp;#39; (&amp;#39;SHARDING_COLUMN&amp;#39; &amp;#39;=&amp;#39; columnName | &amp;#39;SHARDING_COLUMNS&amp;#39; &amp;#39;=&amp;#39; columnNames) &amp;#39;,&amp;#39; &amp;#39;SHARDING_ALGORITHM&amp;#39; &amp;#39;=&amp;#39; algorithmDefinition strategyType ::= string algorithmDefinition ::= &amp;#39;TYPE&amp;#39; &amp;#39;(&amp;#39; &amp;#39;NAME&amp;#39; &amp;#39;=&amp;#39; algorithmType &amp;#39;,&amp;#39; propertiesDefinition &amp;#39;)&amp;#39; columnNames ::= columnName (&amp;#39;,&amp;#39; columnName)+ columnName ::= identifier algorithmType ::= string propertiesDefinition ::= &amp;#39;PROPERTIES&amp;#39; &amp;#39;(&amp;#39; key &amp;#39;=&amp;#39; value (&amp;#39;,&amp;#39; key &amp;#39;=&amp;#39; value)* &amp;#39;)&amp;#39; key ::= string value ::= literal       补充说明  当使用复合分片算法时，需要通过 SHARDING_COLUMNS 指定多个分片键； algorithmType 为分片算法类型，详细的分片算法类型信息请参考分片算法。  示例  修改默认分表策略  ALTER DEFAULT SHARDING TABLE STRATEGY ( TYPE=&amp;#34;standard&amp;#34;, SHARDING_COLUMN=user_id, SHARDING_ALGORITHM(TYPE(NAME=inline, PROPERTIES(&amp;#34;algorithm-expression&amp;#34;=&amp;#34;t_order_${user_id % 2}&amp;#34;))) ); 保留字 ALTER、DEFAULT、SHARDING、DATABASE、TABLE、STRATEGY、TYPE、SHARDING_COLUMN、SHARDING_COLUMNS、SHARDING_ALGORITHM、NAME、PROPERTIES</description>
    </item>
    
    <item>
      <title>DROP DEFAULT SHARDING STRATEGY</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-default-sharding-strategy/</guid>
      <description>描述 DROP DEFAULT SHARDING STRATEGY 语法用于删除指定逻辑库的默认分片策略。
语法定义 语法 铁路图  DropDefaultShardingStrategy ::= &amp;#39;DROP&amp;#39; &amp;#39;DEFAULT&amp;#39; &amp;#39;SHARDING&amp;#39; (&amp;#39;TABLE&amp;#39; | &amp;#39;DATABASE&amp;#39;) &amp;#39;STRATEGY&amp;#39; ifExists? (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; databaseName ::= identifier       补充说明  未指定 databaseName 时，默认是当前使用的 DATABASE。 如果也未使用 DATABASE 则会提示 No database selected； ifExists 子句用于避免 Default sharding strategy not exists 错误。  示例  为指定逻辑库删除默认表分片策略  DROP DEFAULT SHARDING TABLE STRATEGY FROM sharding_db;  为当前逻辑库删除默认库分片策略  DROP DEFAULT SHARDING DATABASE STRATEGY;  使用 ifExists 子句删除默认表分片策略  DROP DEFAULT SHARDING TABLE STRATEGY IF EXISTS;  使用 ifExists 子句删除默认库分片策略  DROP DEFAULT SHARDING DATABASE STRATEGY IF EXISTS; 保留字 DROP、DEFAULT、SHARDING、TABLE、DATABASE、STRATEGY、FROM</description>
    </item>
    
    <item>
      <title>DROP SHARDING KEY GENERATOR</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-key-generator/</guid>
      <description>描述 DROP SHARDING KEY GENERATOR 语法用于删除指定逻辑库的指定分片主键生成器。
语法定义 语法 铁路图  DropShardingKeyGenerator ::= &amp;#39;DROP&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;KEY&amp;#39; &amp;#39;GENERATOR&amp;#39; ifExists? keyGeneratorName (keyGeneratorName)* (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; keyGeneratorName ::= identifier databaseName ::= identifier       补充说明  未指定 databaseName 时，默认是当前使用的 DATABASE。 如果也未使用 DATABASE 则会提示 No database selected； ifExists 子句用于避免 Sharding key generator not exists 错误。  示例  删除指定逻辑库的指定分片主键生成器  DROP SHARDING KEY GENERATOR t_order_snowflake FROM sharding_db;  删除当前逻辑库的指定分片主键生成器  DROP SHARDING KEY GENERATOR t_order_snowflake;  使用 ifExists 子句删除分片主键生成器  DROP SHARDING KEY GENERATOR IF EXISTS t_order_snowflake; 保留字 DROP、SHARDING、KEY、GENERATOR、FROM</description>
    </item>
    
    <item>
      <title>DROP SHARDING ALGORITHM</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-algorithm/</guid>
      <description>描述 DROP SHARDING ALGORITHM 语法用于删除指定逻辑库的指定分片算法。
语法定义 语法 铁路图  DropShardingAlgorithm ::= &amp;#39;DROP&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;ALGORITHM&amp;#39; algorithmName ifExists? (&amp;#39;FROM&amp;#39; databaseName)? ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; algorithmName ::= identifier databaseName ::= identifier       补充说明  未指定 databaseName 时，默认是当前使用的 DATABASE。 如果也未使用 DATABASE 则会提示 No database selected； ifExists 子句用于避免 Sharding algorithm not exists 错误。  示例  删除指定逻辑库的指定分片算法  DROP SHARDING ALGORITHM t_order_hash_mod FROM sharding_db;  删除当前逻辑库的指定分片算法  DROP SHARDING ALGORITHM t_order_hash_mod;  使用 ifExists 子句删除分片算法  DROP SHARDING ALGORITHM IF EXISTS t_order_hash_mod; 保留字 DROP、SHARDING、ALGORITHM、FROM</description>
    </item>
    
    <item>
      <title>CREATE SHARDING TABLE REFERENCE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/create-sharding-table-reference-rule/</guid>
      <description>描述 CREATE SHARDING TABLE REFERENCE RULE 语法用于为分片表创建关联规则。
语法定义 语法 铁路图  CreateShardingTableReferenceRule ::= &amp;#39;CREATE&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;REFERENCE&amp;#39; &amp;#39;RULE&amp;#39; ifNotExists? referenceRelationshipDefinition (&amp;#39;,&amp;#39; referenceRelationshipDefinition)* ifNotExists ::= &amp;#39;IF&amp;#39; &amp;#39;NOT&amp;#39; &amp;#39;EXISTS&amp;#39; referenceRelationshipDefinition ::= ruleName &amp;#39;(&amp;#39; tableName (&amp;#39;,&amp;#39; tableName)* &amp;#39;)&amp;#39; ruleName ::= identifier tableName ::= identifier       补充说明  只能为分片表创建关联关系； 一张分片表只能具有一个关联关系； 关联的分片表应分布在相同的存储单元，并且分片个数相同。例如 ds_${0..1}.t_order_${0..1} 与 ds_${0..1}.t_order_item_${0..1}； 关联的分片表应使用一致的分片算法。例如 t_order_${order_id % 2} 与 t_order_item_${order_item_id % 2}； ifNotExists 子句用于避免 Duplicate sharding table reference rule 错误。  示例 1.</description>
    </item>
    
    <item>
      <title>ALTER SHARDING TABLE REFERENCE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-reference-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/alter-sharding-table-reference-rule/</guid>
      <description>描述 ALTER SHARDING TABLE REFERENCE RULE 语法用于修改分片表关联关系。
语法定义 语法 铁路图  AlterShardingTableReferenceRule ::= &amp;#39;ALTER&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;REFERENCE&amp;#39; &amp;#39;RULE&amp;#39; referenceRelationshipDefinition (&amp;#39;,&amp;#39; referenceRelationshipDefinition)* referenceRelationshipDefinition ::= ruleName &amp;#39;(&amp;#39; tableName (&amp;#39;,&amp;#39; tableName)* &amp;#39;)&amp;#39; ruleName ::= identifier tableName ::= identifier       补充说明  一张分片表只能具有一个关联关系； 关联的分片表应分布在相同的存储单元，并且分片个数相同。例如 ds_${0..1}.t_order_${0..1} 与 ds_${0..1}.t_order_item_${0..1}； 关联的分片表应使用一致的分片算法。例如 t_order_${order_id % 2} 与 t_order_item_${order_item_id % 2}；  示例 1.修改关联关系 ALTER SHARDING TABLE REFERENCE RULE ref_0 (t_order,t_order_item); 2.修改多个关联关系 ALTER SHARDING TABLE REFERENCE RULE ref_0 (t_order,t_order_item), ref_1 (t_product,t_product_item); 保留字 ALTER、SHARDING、TABLE、REFERENCE、RULE</description>
    </item>
    
    <item>
      <title>DROP SHARDING TABLE REFERENCE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-reference-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.5.1/cn/user-manual/shardingsphere-proxy/distsql/syntax/rdl/rule-definition/sharding/drop-sharding-table-reference-rule/</guid>
      <description>描述 DROP SHARDING TABLE REFERENCE RULE 语法用删除指定的关联规则。
语法定义 语法 铁路图  DropShardingTableReferenceRule ::= &amp;#39;DROP&amp;#39; &amp;#39;SHARDING&amp;#39; &amp;#39;TABLE&amp;#39; &amp;#39;REFERENCE&amp;#39; &amp;#39;RULE&amp;#39; ifExists? ruleName (&amp;#39;,&amp;#39; ruleName)* ifExists ::= &amp;#39;IF&amp;#39; &amp;#39;EXISTS&amp;#39; ruleName ::= identifier       补充说明  ifExists 子句用于避免 Sharding reference rule not exists 错误。  示例  删除单个关联规则  DROP SHARDING TABLE REFERENCE RULE ref_0;  删除多个关联规则  DROP SHARDING TABLE REFERENCE RULE ref_0, ref_1;  使用 ifExists 子句删除关联规则  DROP SHARDING TABLE REFERENCE RULE IF EXISTS ref_0; 保留字 DROP、SHARDING、TABLE、REFERENCE、RULE</description>
    </item>
    
  </channel>
</rss>
