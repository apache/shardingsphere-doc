<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Management on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/</link>
    <description>Recent content in Management on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Registry Center</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/registry-center/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/registry-center/</guid>
      <description>Motivation   Centralized configuration: more and more running examples have made it hard to manage separate configurations and asynchronized configurations can cause serious problems. Concentrating them in the configuration center can make the management more effective.
  Dynamic configuration: distribution after configuration modification is another important capability of configuration center. It can support dynamic switch between data sources and rule configurations.
  Hold all ephemeral status data dynamically generated in runtime(such as available proxy instances, disabled datasource instances etc).</description>
    </item>
    
    <item>
      <title>Third-party Components</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/dependency/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/dependency/</guid>
      <description>Apache ShardingSphere uses SPI to load data to the config center and registry center and disable instances and databases. Currently, Apache ShardingSphere supports frequently used registry centers, Zookeeper, Etcd, Apollo and Nacos. In addition, by injecting them to ShardingSphere with SPI, users can use other third-party config and registry centers to enable databases governance.
    Driver Version Config Center Registry Center     Zookeeper Apache Curator 3.</description>
    </item>
    
    <item>
      <title>Change History</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/change-history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/features/governance/management/change-history/</guid>
      <description>5.0.0-alpha Config Center Structure in Configuration Center namespace ├──users # Users configuration ├──props # Properties configuration ├──schemas # Schema configuration ├ ├──${schema_1} # Schema name 1 ├ ├ ├──datasource # Datasource configuration ├ ├ ├──rule # Rule configuration ├ ├ ├──table # Table configuration ├ ├──${schema_2} # Schema name 2 ├ ├ ├──datasource # Datasource configuration ├ ├ ├──rule # Rule configuration ├ ├ ├──table # Table configuration Registry Center Data Structure in Registry Center namespace ├──states ├ ├──proxynodes ├ ├ ├──${your_instance_ip_a}@${your_instance_pid_x}@${UUID} ├ ├ ├──${your_instance_ip_b}@${your_instance_pid_y}@${UUID} ├ ├ ├──.</description>
    </item>
    
  </channel>
</rss>