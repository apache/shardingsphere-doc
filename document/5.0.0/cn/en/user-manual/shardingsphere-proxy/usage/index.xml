<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Usage on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/</link>
    <description>Recent content in Usage on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Proxy Startup</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/startup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/startup/</guid>
      <description>Startup Steps  Download the latest version of ShardingSphere-Proxy. If users use docker, they can execute docker pull shardingsphere/shardingsphere-proxy to get the image. Please refer to Docker Image for more details. After the decompression, revise conf/server.yaml and documents begin with config- prefix, conf/config-xxx.yaml for example, to configure sharding rules and readwrite-splitting rules. Please refer to Configuration Manual for the configuration method. Please run bin/start.sh for Linux operating system; run bin/start.bat for Windows operating system to start ShardingSphere-Proxy.</description>
    </item>
    
    <item>
      <title>Governance</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/governance/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/governance/</guid>
      <description>ShardingSphere-Proxy use SPI to support Governance, realize the unified management of configurations and metadata, as well as instance disabling and replica disabling.
Zookeeper ShardingSphere-Proxy has provided the solution of Zookeeper in default, which implements the functions of config center, registry center. Configuration Rules consistent with ShardingSphere-JDBC YAML.
Other Third Party Components Refer to Supported Third Party Components for details.
 Use SPI methods in logic coding and put the generated jar package to the lib folder of ShardingSphere-Proxy.</description>
    </item>
    
    <item>
      <title>Distributed Transaction</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/transaction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/transaction/</guid>
      <description>ShardingSphere-Proxy supports LOCAL, XA, BASE transactions, LOCAL transaction is default value, it is original transaction of relational database.
XA transaction Default XA transaction manager of ShardingSphere is Atomikos. Users can customize Atomikos configuration items through adding jta.properties in conf catalog of ShardingSphere-Proxy. Please refer to Official Documents of Atomikos for detailed configurations.
 Use Narayana XA Transaction Managerã€‚   Copy the jar file required by Narayana to conf/lib. The reference package is as follows:  &amp;lt;properties&amp;gt; &amp;lt;narayana.</description>
    </item>
    
  </channel>
</rss>