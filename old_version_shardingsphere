commit 9fd17d1df26bb805e70767a1f3406997bfe3067f
Author: Ling Hengqian <linghengqian@outlook.com>
Date:   Wed Sep 18 12:04:31 2024 +0800

    Provides nightly builds on ghcr.io for ShardingSphere Agent (#32827)

diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.cn.md b/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.cn.md
index fd716593ec0..96cc268049b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.cn.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.cn.md
@@ -110,6 +110,41 @@ java -javaagent:/agent/shardingsphere-agent-${latest.release.version}.jar -jar t
 + 3 访问启动的服务
 + 4 查看对应的插件是否生效
 
+### 夜间构建
+
+ShardingSphere Agent 在 https://github.com/orgs/apache/packages?repo_name=shardingsphere 存在夜间构建的 Docker Image。
+可通过类似如下的 `Dockerfile` 来为类似 `example.jar` 的 JAR 使用此 Docker Image 中的 ShardingSphere Agent。
+假设 `example.jar` 是一个即将使用 ShardingSphere Agent 的 Spring Boot 的 Uber JAR，
+且 `custom-agent.yaml` 包含 ShardingSphere Agent 的配置。
+
+```dockerfile
+FROM ghcr.io/apache/shardingsphere-agent:latest
+COPY ./example.jar /example.jar
+COPY ./custom-agent.yaml /usr/agent/conf/agent.yaml
+ENTRYPOINT java \
+    -javaagent:/usr/agent/shardingsphere-agent-5.5.1-SNAPSHOT.jar
+    -jar \
+    /example.jar
+```
+
+`custom-agent.yaml` 的内容可能如下，
+`http://localhost:4318` 指向本地部署的 `otel/opentelemetry-collector-contrib:0.108.0` 的 Docker Container。
+
+```yaml
+plugins:
+  tracing:
+    OpenTelemetry:
+      props:
+        otel.service.name: "example"
+        otel.exporter.otlp.traces.endpoint: "http://localhost:4318"
+```
+
+或者在 `Dockerfile` 中添加以下语句，这会将 Agent 的目录复制到 `/shardingsphere-agent/` 。
+
+```dockerfile
+COPY --from=ghcr.io/apache/shardingsphere-agent:latest /usr/agent/ /shardingsphere-agent/
+```
+
 ## Metrics
 
 | 指标名称                                 | 指标类型    | 指标描述                                                                                       |
diff --git a/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.en.md b/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.en.md
index 270e66421b2..06959469c2b 100644
--- a/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.en.md
+++ b/docs/document/content/user-manual/shardingsphere-jdbc/observability/_index.en.md
@@ -112,6 +112,43 @@ java -javaagent:/agent/shardingsphere-agent-${latest.release.version}.jar -jar t
 + 3 Access to started service
 + 4 Check whether the corresponding plug-in is effective
 
+### Nightly Builds
+
+A nightly built Docker Image of ShardingSphere Agent exists at https://github.com/orgs/apache/packages?repo_name=shardingsphere .
+
+You can use ShardingSphere Agent in this Docker Image for a JAR like `example.jar` by using a `Dockerfile` like the following.
+
+Assume `example.jar` is an Uber JAR of Spring Boot that will use ShardingSphere Agent,
+and `custom-agent.yaml` contains the configuration of ShardingSphere Agent.
+
+```dockerfile
+FROM ghcr.io/apache/shardingsphere-agent:latest
+COPY ./example.jar /example.jar
+COPY ./custom-agent.yaml /usr/agent/conf/agent.yaml
+ENTRYPOINT java \
+    -javaagent:/usr/agent/shardingsphere-agent-5.5.1-SNAPSHOT.jar
+    -jar \
+    /example.jar
+```
+
+The content of `custom-agent.yaml` may be as follows,
+`http://localhost:4318` points to the locally deployed `otel/opentelemetry-collector-contrib:0.108.0` Docker Container.
+
+```yaml
+plugins:
+  tracing:
+    OpenTelemetry:
+      props:
+        otel.service.name: "example"
+        otel.exporter.otlp.traces.endpoint: "http://localhost:4318"
+```
+
+Or add the following statement in `Dockerfile`, which will copy the Agent directory to `/shardingsphere-agent/`.
+
+```dockerfile
+COPY --from=ghcr.io/apache/shardingsphere-agent:latest /usr/agent/ /shardingsphere-agent/
+```
+
 ## Metrics
 
 | Name                                  | Type      | Description                                                                                            |
