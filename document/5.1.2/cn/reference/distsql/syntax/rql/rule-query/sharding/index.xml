<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分片 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.1.2/cn/reference/distsql/syntax/rql/rule-query/sharding/</link>
    <description>Recent content in 分片 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.1.2/cn/reference/distsql/syntax/rql/rule-query/sharding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SHOW SHARDING TABLE RULE</title>
      <link>https://shardingsphere.apache.org/document/5.1.2/cn/reference/distsql/syntax/rql/rule-query/sharding/show-sharding-table-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.2/cn/reference/distsql/syntax/rql/rule-query/sharding/show-sharding-table-rule/</guid>
      <description>描述 SHOW SHARDING TABLE RULE 语法用于查询指定逻辑库中的分片规则。
语法 ShowShardingTableRule ::=&#39;SHOW&#39; &#39;SHARDING&#39; &#39;TABLE&#39; (&#39;RULE&#39; tableName | &#39;RULES&#39;) (&#39;FROM&#39; schemaName)?tableName ::=identifierschemaName ::=identifier补充说明  未指定 schemaName 时，默认是当前使用的 SCHEMA。 如果也未使用 SCHEMA 则会提示 No database selected。  返回值说明    列 说明     table 逻辑表名   actual_data_nodes 实际的数据节点   actual_data_sources 实际的数据源（通过 RDL 创建的规则时显示）   database_strategy_type 数据库分片策略类型   database_sharding_column 数据库分片键   database_sharding_algorithm_type 数据库分片算法类型   database_sharding_algorithm_props 数据库分片算法参数   table_strategy_type 表分片策略类型   table_sharding_column 表分片键   table_sharding_algorithm_type 表分片算法类型   table_sharding_algorithm_props 表分片算法参数   key_generate_column 分布式主键生成列   key_generator_type 分布式主键生成器类型   key_generator_props 分布式主键生成器参数    示例  查询指定逻辑库的分片规则  SHOW SHARDING TABLE RULES FROM sharding_db; +--------------+-------------------+---------------------+------------------------+--------------------------+----------------------------------+-----------------------------------+---------------------+-----------------------+-------------------------------+--------------------------------+---------------------+--------------------+---------------------+ | table | actual_data_nodes | actual_data_sources | database_strategy_type | database_sharding_column | database_sharding_algorithm_type | database_sharding_algorithm_props | table_strategy_type | table_sharding_column | table_sharding_algorithm_type | table_sharding_algorithm_props | key_generate_column | key_generator_type | key_generator_props | +--------------+-------------------+---------------------+------------------------+--------------------------+----------------------------------+-----------------------------------+---------------------+-----------------------+-------------------------------+--------------------------------+---------------------+--------------------+---------------------+ | t_order | | ds_0,ds_1 | | | | | mod | order_id | mod | sharding-count=4 | | | | | t_order_item | | ds_0,ds_1 | | | | | mod | order_id | mod | sharding-count=4 | | | | +--------------+-------------------+---------------------+------------------------+--------------------------+----------------------------------+-----------------------------------+---------------------+-----------------------+-------------------------------+--------------------------------+---------------------+--------------------+---------------------+ 2 rows in set (0.</description>
    </item>
    
  </channel>
</rss>