<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YAML 配置 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/</link>
    <description>Recent content in YAML 配置 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>认证和授权</title>
      <link>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/authority/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/authority/</guid>
      <description>背景信息 在 ShardingSphere-Proxy 中，通过 authority 来配置用户的认证和授权信息。
得益于 ShardingSphere 的可插拔架构，Proxy 提供了两种级别的权限提供者，分别是：
 ALL_PERMITTED：每个用户都拥有所有权限，无需专门授权； DATABASE_PERMITTED：为用户授予指定逻辑库的权限，通过 user-database-mappings 进行定义。  在配置 authority 时，管理员可根据需要选择使用哪一种权限提供者。
参数解释 authority: users: - user: # 用于登录计算节点的用户名和授权主机的组合，格式：&amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;，hostname 为 % 或空字符串表示不限制授权主机 password: # 用户密码 authenticationMethodName: # 可选项，用于为用户指定密码认证方式 authenticators: # 可选项，默认不需要配置，Proxy 根据前端协议类型自动选择 authenticatorName: type: # 密码认证类型 defaultAuthenticator: # 可选项，指定一个 authenticatorName 作为默认的密码认证方式 privilege: type: # 权限提供者类型，缺省值为 ALL_PERMITTED 配置示例 极简配置 authority: users: - user: root@% password: root - user: sharding password: sharding 说明：
 定义了两个用户：root@% 和 sharding； 未定义 authenticators 和 authenticationMethodName，Proxy 将根据前端协议自动选择; 未指定 privilege type，采用默认的 ALL_PERMITTED。  认证配置 自定义认证配置能够满足用户在一些特定场景下的需求。 以 openGauss 作为前端协议类型为例，其默认的认证算法为 scram-sha-256。 如果用户 sharding 需要用旧版本的 psql 客户端（不支持 scram-sha-256）连接 Proxy，则管理员可能允许 sharding 使用 md5 方式进行密码认证。 配置方式如下：</description>
    </item>
    
    <item>
      <title>属性配置</title>
      <link>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/props/</guid>
      <description>背景信息 Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 server.yaml 进行配置。
参数解释    名称 数据类型 说明 默认值 动态生效     system-log-level (?) String 系统日志输出级别，支持 DEBUG、INFO、WARN 和 ERROR，默认级别是 INFO。 false 是   sql-show (?) boolean 是否在日志中打印 SQL。 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。
如果开启配置，日志将使用 Topic ShardingSphere-SQL，日志级别是 INFO。 false 是   sql-simple (?) boolean 是否在日志中打印简单风格的 SQL。 false 是   kernel-executor-size (?) int 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。 infinite 否   max-connections-size-per-query (?</description>
    </item>
    
    <item>
      <title>规则配置</title>
      <link>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.3.2/cn/user-manual/shardingsphere-proxy/yaml-config/rules/</guid>
      <description>背景信息 本节介绍如何进行 ShardingSphere-Proxy 的规则配置。
参数解释 ShardingSphere-Proxy 的规则配置与 ShardingSphere-JDBC 一致，具体规则请参考 ShardingSphere-JDBC 规则配置。
注意事项 与 ShardingSphere-JDBC 不同的是，以下规则需要配置在 ShardingSphere-Proxy 的 server.yaml 中：
 SQL 解析  sqlParser: sqlCommentParseEnabled: true sqlStatementCache: initialCapacity: 2000 maximumSize: 65535 parseTreeCache: initialCapacity: 128 maximumSize: 1024  分布式事务  transaction: defaultType: XA providerType: Atomikos  SQL 翻译  sqlTranslator: type: useOriginalSQLWhenTranslatingFailed: </description>
    </item>
    
  </channel>
</rss>