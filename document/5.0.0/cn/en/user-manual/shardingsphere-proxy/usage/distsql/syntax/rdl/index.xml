<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RDL Syntax on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/</link>
    <description>Recent content in RDL Syntax on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Data Source</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-resource/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-resource/</guid>
      <description>Definition ADD RESOURCE dataSource [, dataSource] ... ALTER RESOURCE dataSource [, dataSource] ... dataSource: simpleSource | urlSource simpleSource: dataSourceName(HOST=hostName,PORT=port,DB=dbName,USER=user [,PASSWORD=password] [,PROPERTIES(poolProperty [,poolProperty] ...)]) urlSource: dataSourceName(URL=url,USER=user [,PASSWORD=password] [,PROPERTIES(poolProperty [,poolProperty]) ...]) poolProperty: &amp;#34;key&amp;#34;= (&amp;#34;value&amp;#34; | value) DROP RESOURCE dataSourceName [, dataSourceName] ... [ignore single tables]  Before adding resources, please confirm that a distributed database has been created, and execute the use command to successfully select a database Confirm that the added resource can be connected normally, otherwise it will not be added successfully Duplicate dataSourceName is not allowed to be added In the definition of a dataSource, the syntax of simpleSource and urlSource cannot be mixed poolProperty is used to customize connection pool properties, key must be the same as the connection pool property name, value supports int and String types ALTER RESOURCE will switch the connection pool.</description>
    </item>
    
    <item>
      <title>Sharding</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-sharding-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-sharding-rule/</guid>
      <description>Definition Sharding Table Rule CREATE SHARDING TABLE RULE shardingTableRuleDefinition [, shardingTableRuleDefinition] ... CREATE DEFAULT SHARDING shardingScope STRATEGY (shardingStrategy) ALTER SHARDING TABLE RULE shardingTableRuleDefinition [, shardingTableRuleDefinition] ... DROP SHARDING TABLE RULE tableName [, tableName] ... CREATE SHARDING ALGORITHM shardingAlgorithmDefinition [, shardingAlgorithmDefinition] ... DROP SHARDING ALGORITHM algorithmName [, algorithmName] ... shardingTableRuleDefinition: shardingAutoTableRule | shardingTableRule shardingAutoTableRule: tableName(resources (COMMA shardingColumn)? (COMMA algorithmDefinition)? (COMMA keyGenerateStrategy)?) shardingTableRule: tableName(dataNodes (COMMA databaseStrategy)? (COMMA tableStrategy)? (COMMA keyGenerateStrategy)?) resources: RESOURCES(resource [, resource] .</description>
    </item>
    
    <item>
      <title>Readwrite-Splitting</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-readwrite-splitting-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-readwrite-splitting-rule/</guid>
      <description>Definition CREATE READWRITE_SPLITTING RULE readwriteSplittingRuleDefinition [, readwriteSplittingRuleDefinition] ... ALTER READWRITE_SPLITTING RULE readwriteSplittingRuleDefinition [, readwriteSplittingRuleDefinition] ... DROP READWRITE_SPLITTING RULE ruleName [, ruleName] ... readwriteSplittingRuleDefinition: ruleName ([staticReadwriteSplittingRuleDefinition | dynamicReadwriteSplittingRuleDefinition] [, loadBanlancerDefinition]) staticReadwriteSplittingRuleDefinition: WRITE_RESOURCE=writeResourceName, READ_RESOURCES(resourceName [, resourceName] ... ) dynamicReadwriteSplittingRuleDefinition: AUTO_AWARE_RESOURCE=resourceName loadBanlancerDefinition: TYPE(NAME=loadBanlancerType [, PROPERTIES([algorithmProperties] )] ) algorithmProperties: algorithmProperty [, algorithmProperty] ... algorithmProperty: key=value  Support the creation of static readwrite-splitting rules and dynamic readwrite-splitting rules Dynamic readwrite-splitting rules rely on database discovery rules loadBanlancerType specifies the load balancing algorithm type, please refer to Load Balance Algorithm Duplicate ruleName will not be created  Example // Static CREATE READWRITE_SPLITTING RULE ms_group_0 ( WRITE_RESOURCE=write_ds, READ_RESOURCES(read_ds_0,read_ds_1), TYPE(NAME=random) ); // Dynamic CREATE READWRITE_SPLITTING RULE ms_group_1 ( AUTO_AWARE_RESOURCE=group_0, TYPE(NAME=random,PROPERTIES(read_weight=&amp;#39;2:1&amp;#39;)) ); ALTER READWRITE_SPLITTING RULE ms_group_1 ( WRITE_RESOURCE=write_ds, READ_RESOURCES(read_ds_0,read_ds_1,read_ds_2), TYPE(NAME=random,PROPERTIES(read_weight=&amp;#39;2:0&amp;#39;)) ); DROP READWRITE_SPLITTING RULE ms_group_1; </description>
    </item>
    
    <item>
      <title>Encrypt</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-encrypt-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-encrypt-rule/</guid>
      <description>Definition CREATE ENCRYPT RULE encryptRuleDefinition [, encryptRuleDefinition] ... ALTER ENCRYPT RULE encryptRuleDefinition [, encryptRuleDefinition] ... DROP ENCRYPT RULE tableName [, tableName] ... encryptRuleDefinition: tableName(COLUMNS(columnDefinition [, columnDefinition] ...), QUERY_WITH_CIPHER_COLUMN=queryWithCipherColumn) columnDefinition: (NAME=columnName [, PLAIN=plainColumnName] , CIPHER=cipherColumnName, encryptAlgorithm) encryptAlgorithm: TYPE(NAME=encryptAlgorithmType [, PROPERTIES([algorithmProperties] )] ) algorithmProperties: algorithmProperty [, algorithmProperty] ... algorithmProperty: key=value  PLAIN specifies the plain column, CIPHER specifies the cipher column encryptAlgorithmType specifies the encryption algorithm type, please refer to Encryption Algorithm Duplicate tableName will not be created queryWithCipherColumn support uppercase or lowercase true or false  Example CREATE ENCRYPT RULE t_encrypt ( COLUMNS( (NAME=user_id,PLAIN=user_plain,CIPHER=user_cipher,TYPE(NAME=AES,PROPERTIES(&amp;#39;aes-key-value&amp;#39;=&amp;#39;123456abc&amp;#39;))), (NAME=order_id, CIPHER =order_cipher,TYPE(NAME=MD5)) ), QUERY_WITH_CIPHER_COLUMN=true), t_encrypt_2 ( COLUMNS( (NAME=user_id,PLAIN=user_plain,CIPHER=user_cipher,TYPE(NAME=AES,PROPERTIES(&amp;#39;aes-key-value&amp;#39;=&amp;#39;123456abc&amp;#39;))), (NAME=order_id, CIPHER=order_cipher,TYPE(NAME=MD5)) ), QUERY_WITH_CIPHER_COLUMN=FALSE); ALTER ENCRYPT RULE t_encrypt ( COLUMNS( (NAME=user_id,PLAIN=user_plain,CIPHER=user_cipher,TYPE(NAME=AES,PROPERTIES(&amp;#39;aes-key-value&amp;#39;=&amp;#39;123456abc&amp;#39;))), (NAME=order_id,CIPHER=order_cipher,TYPE(NAME=MD5)) ), QUERY_WITH_CIPHER_COLUMN=TRUE); DROP ENCRYPT RULE t_encrypt,t_encrypt_2; </description>
    </item>
    
    <item>
      <title>DB Discovery</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-db-discovery-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-db-discovery-rule/</guid>
      <description>Definition CREATE DB_DISCOVERY RULE databaseDiscoveryRuleDefinition [, databaseDiscoveryRuleDefinition] ... ALTER DB_DISCOVERY RULE databaseDiscoveryRuleDefinition [, databaseDiscoveryRuleDefinition] ... DROP DB_DISCOVERY RULE ruleName [, ruleName] ... databaseDiscoveryRuleDefinition: ruleName(resources, discoveryTypeDefinition) resources: RESOURCES(resourceName [, resourceName] ...) discoveryTypeDefinition: TYPE(NAME=discoveryType [, PROPERTIES([algorithmProperties] )] ) algorithmProperties: algorithmProperty [, algorithmProperty] ... algorithmProperty: key=value  discoveryType specifies the database discovery service type, ShardingSphere has built-in support for MGR Duplicate ruleName will not be created  Example CREATE DB_DISCOVERY RULE ha_group_0 ( RESOURCES(resource_0,resource_1), TYPE(NAME=mgr,PROPERTIES(groupName=&amp;#39;92504d5b-6dec&amp;#39;,keepAliveCron=&amp;#39;&amp;#39;)) ); ALTER DB_DISCOVERY RULE ha_group_0 ( RESOURCES(resource_0,resource_1,resource_2), TYPE(NAME=mgr,PROPERTIES(groupName=&amp;#39;92504d5b-6dec&amp;#39; ,keepAliveCron=&amp;#39;&amp;#39;)) ); DROP DB_DISCOVERY RULE ha_group_0; </description>
    </item>
    
    <item>
      <title>Shadow</title>
      <link>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-shadow-rule/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.0.0/en/user-manual/shardingsphere-proxy/usage/distsql/syntax/rdl/rdl-shadow-rule/</guid>
      <description>Definition CREATE SHADOW RULE shadowRuleDefinition [, shadowRuleDefinition] ... ALTER SHADOW RULE shadowRuleDefinition [, shadowRuleDefinition] ... ALTER SHADOW ALGORITHM shadowAlgorithm [, shadowAlgorithm] ... DROP SHADOW RULE ruleName [, ruleName] ... DROP SHADOW ALGORITHM algorithmName [, algorithmName] ... shadowRuleDefinition: ruleName(resourceMapping, shadowTableRule [, shadowTableRule] ...) resourceMapping: SOURCE=resourceName, SHADOW=resourceName shadowTableRule: tableName(shadowAlgorithm [, shadowAlgorithm] ...) shadowAlgorithm: ([algorithmName, ] TYPE(NAME=shadowAlgorithmType, PROPERTIES([algorithmProperties] ...))) algorithmProperties: algorithmProperty [, algorithmProperty] ... algorithmProperty: key=value  Duplicate ruleName cannot be created resourceMapping specifies the mapping relationship between the source database and the shadow library.</description>
    </item>
    
  </channel>
</rss>