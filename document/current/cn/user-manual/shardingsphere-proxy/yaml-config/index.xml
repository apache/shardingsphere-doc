<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>YAML 配置 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/</link>
    <description>Recent content in YAML 配置 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>认证和授权</title>
      <link>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/authority/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/authority/</guid>
      <description>背景信息 在 ShardingSphere-Proxy 中，通过 authority 来配置用户的认证和授权信息。
得益于 ShardingSphere 的可插拔架构，Proxy 提供了两种级别的权限提供者，分别是：
 ALL_PERMITTED：每个用户都拥有所有权限，无需专门授权；（将在未来版本中删除） DATABASE_PERMITTED：为用户授予指定逻辑库的权限，通过 user-database-mappings 进行定义。（推荐使用）  在配置 authority 时，管理员可根据需要选择使用哪一种权限提供者。
参数解释 authority: users: - user: # 用于登录计算节点的用户名和授权主机的组合，格式：&amp;lt;username&amp;gt;@&amp;lt;hostname&amp;gt;，hostname 为 % 或空字符串表示不限制授权主机，username 和 hostname 大小写不敏感 password: # 用户密码 admin: # 可选项，管理员身份标识。若为 true，该用户拥有最高权限，缺省值为 false authenticationMethodName: # 可选项，用于为用户指定密码认证方式 authenticators: # 可选项，默认不需要配置，Proxy 根据前端协议类型自动选择 authenticatorName: type: # 密码认证类型 defaultAuthenticator: # 可选项，指定一个 authenticatorName 作为默认的密码认证方式 privilege: type: # 权限提供者类型，缺省值为 ALL_PERMITTED 配置示例 极简配置 authority: users: - user: root@% password: root - user: sharding password: sharding 说明：</description>
    </item>
    
    <item>
      <title>属性配置</title>
      <link>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/props/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/props/</guid>
      <description>背景信息 Apache ShardingSphere 提供了丰富的系统配置属性，用户可通过 global.yaml 进行配置。
参数解释    名称 数据类型 说明 默认值 动态生效     system-log-level (?) String 系统日志输出级别，支持 DEBUG、INFO、WARN 和 ERROR，默认级别是 INFO。 INFO 是   sql-show (?) boolean 是否在日志中打印 SQL。 打印 SQL 可以帮助开发者快速定位系统问题。日志内容包含：逻辑 SQL，真实 SQL 和 SQL 解析结果。
如果开启配置，日志将使用 Topic ShardingSphere-SQL，日志级别是 INFO。 false 是   sql-simple (?) boolean 是否在日志中打印简单风格的 SQL。 false 是   kernel-executor-size (?) int 用于设置任务处理线程池的大小。每个 ShardingSphereDataSource 使用一个独立的线程池，同一个 JVM 的不同数据源不共享线程池。 infinite 否   max-connections-size-per-query (?</description>
    </item>
    
    <item>
      <title>规则配置</title>
      <link>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/rules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/rules/</guid>
      <description>背景信息 本节介绍如何进行 ShardingSphere-Proxy 的规则配置。
参数解释 ShardingSphere-Proxy 的规则配置与 ShardingSphere-JDBC 一致，具体规则请参考 ShardingSphere-JDBC 规则配置。
注意事项 与 ShardingSphere-JDBC 不同的是，以下规则需要配置在 ShardingSphere-Proxy 的 global.yaml 中：
 SQL 解析  sqlParser: sqlStatementCache: initialCapacity: 2000 maximumSize: 65535 parseTreeCache: initialCapacity: 128 maximumSize: 1024  分布式事务  transaction: defaultType: XA providerType: Atomikos  SQL 翻译  sqlTranslator: type: useOriginalSQLWhenTranslatingFailed:  联邦查询  sqlFederation: sqlFederationEnabled: true allQueryUseSQLFederation: false executionPlanCache: initialCapacity: 2000 maximumSize: 65535 </description>
    </item>
    
    <item>
      <title>数据源配置</title>
      <link>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/data-source/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere-proxy/yaml-config/data-source/</guid>
      <description>背景信息 ShardingSphere-Proxy 支持常见的数据库连接池: HikariCP、C3P0、DBCP（C3P0、DBCP 需要从 shardingsphere-plugin 仓库获取插件）。
可以通过参数 dataSourceClassName 指定连接池，当不指定时，默认的的数据库连接池为 HikariCP。
参数解释 dataSources: # 数据源配置，可配置多个 &amp;lt;data-source-name&amp;gt; &amp;lt;data_source_name&amp;gt;: # 数据源名称 dataSourceClassName: # 数据源连接池完整类名 url: # 数据库 URL 连接 username: # 数据库用户名 password: # 数据库密码 # ... 数据库连接池的其它属性 配置示例 dataSources: ds_1: url: jdbc:mysql://localhost:3306/ds_1 username: root password: ds_2: dataSourceClassName: com.mchange.v2.c3p0.ComboPooledDataSource url: jdbc:mysql://localhost:3306/ds_2 username: root password: ds_3: dataSourceClassName: org.apache.commons.dbcp2.BasicDataSource url: jdbc:mysql://localhost:3306/ds_3 username: root password: # 配置其他数据源 </description>
    </item>
    
  </channel>
</rss>
