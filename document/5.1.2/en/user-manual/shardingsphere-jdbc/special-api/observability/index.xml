<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Observability on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/</link>
    <description>Recent content in Observability on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Agent</title>
      <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/agent/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/agent/</guid>
      <description>Build Local Build  &amp;gt; cd shardingsphere/shardingsphere-agent&amp;gt; mvn clean installDownload (Not Released Yet)  &amp;gt; weget http://xxxxx/shardingsphere-agent.tar.gz&amp;gt; tar -zxvcf shardingsphere-agent.tar.gzConfiguration Found agent.yaml file:
applicationName: shardingsphere-agent ignoredPluginNames: # A collection of ignored plugins - Opentracing - Jaeger - Zipkin - Prometheus - OpenTelemetry - Logging plugins: Prometheus: host: &amp;#34;localhost&amp;#34; port: 9090 props: JVM_INFORMATION_COLLECTOR_ENABLED : &amp;#34;true&amp;#34; Jaeger: host: &amp;#34;localhost&amp;#34; port: 5775 props: SERVICE_NAME: &amp;#34;shardingsphere-agent&amp;#34; JAEGER_SAMPLER_TYPE: &amp;#34;const&amp;#34; JAEGER_SAMPLER_PARAM: &amp;#34;1&amp;#34; JAEGER_REPORTER_LOG_SPANS: &amp;#34;true&amp;#34; JAEGER_REPORTER_FLUSH_INTERVAL: &amp;#34;1&amp;#34; Zipkin: host: &amp;#34;localhost&amp;#34; port: 9411 props: SERVICE_NAME: &amp;#34;shardingsphere-agent&amp;#34; URL_VERSION: &amp;#34;/api/v2/spans&amp;#34; Opentracing: props: OPENTRACING_TRACER_CLASS_NAME: &amp;#34;org.</description>
    </item>
    
    <item>
      <title>APM Integration</title>
      <link>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/apm-integration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/document/5.1.2/en/user-manual/shardingsphere-jdbc/special-api/observability/apm-integration/</guid>
      <description>Usage Use OpenTracing  Method 1: inject Tracer provided by APM system through reading system parameters  Add startup arguments
-Dorg.apache.shardingsphere.tracing.opentracing.tracer.class=org.apache.skywalking.apm.toolkit.opentracing.SkywalkingTracerCall initialization method.
ShardingTracer.init();  Method 2: inject Tracer provided by APM through parameter.  ShardingTracer.init(new SkywalkingTracer()); Notice: when using SkyWalking OpenTracing agent, the OpenTracing plug-in of Apache ShardingSphere Agent cannot be used at the same time to prevent the two plug-ins from conflicting with each other.
Use SkyWalking&amp;rsquo;s Automatic Agent Please refer to SkyWalking Manual.</description>
    </item>
    
  </channel>
</rss>