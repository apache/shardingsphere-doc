<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>发布指南 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/community/cn/involved/release/</link>
    <description>Recent content in 发布指南 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://shardingsphere.apache.org/community/cn/involved/release/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ShardingSphere 发布指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/release/shardingsphere/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/release/shardingsphere/</guid>
      <description>准备工作 准备工作在 代码冻结前 7 天 进行，以便于贡献者根据发布计划控制研发进度。
1. 检查并更新 LICENSE 和 NOTICE 检查并更新 LICENSE 文件中的依赖版本号。
检查并更新 NOTICE 文件中的年份。
2. 确认 Release Note Release Note 需提供中文/英文两种版本，确认中英文描述是否明确，并按以下标签进行分类：
 新功能 API 变更 功能增强 漏洞修复  3. 新建下一版本 Milestone  新建 Github Milestone； 指定下一版本号； 设置截至日期为下一版本代码冻结日期 。  4. 确认 Issue 列表 打开 Github Issues，过滤 Milestone 为 ${RELEASE.VERSION} 且状态为打开的 Issue:
 关闭已完成的 Issue； 未完成的 Issue 与负责人进行沟通，如果不影响本次发版，修改 Milestone 为下一个版本； 确认发布版本的 Milestone 下没有打开状态的 Issue。  5. 确认 Pull Request 列表 打开 Github Pull requests，过滤 Milestone 为 ${RELEASE.</description>
    </item>
    
    <item>
      <title>ShardingSphere on Cloud 发布指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/release/shardingsphere-on-cloud/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/release/shardingsphere-on-cloud/</guid>
      <description>准备工作 1. 检查并更新 NOTICE 检查并更新 NOTICE 文件中的年份。
2. 确认 Release Note Release Note 需提供中文/英文两种版本，确认中英文描述是否明确，并按以下标签进行分类：
 新功能 API 变更 功能增强 漏洞修复  3. 确认 Issue 列表 打开 Github Issues，过滤 Milestone 为 ${RELEASE.VERSION} 且状态为打开的 Issue:
 关闭已完成的 Issue； 未完成的 Issue 与负责人进行沟通，如果不影响本次发版，修改 Milestone 为下一个版本； 确认发布版本的 Milestone 下没有打开状态的 Issue。  4. 确认 Pull Request 列表 打开 Github Pull requests，过滤 Milestone 为 ${RELEASE.VERSION} 且状态为打开的 Pull Request:
 对打开的 Pull Request 进行 Review 并且 Merge； 无法 Merge 且不影响本次发版的 Pull Request，修改 Milestone 为下一个版本； 确认发布版本的 Milestone 下没有打开状态的 Pull Request。  5.</description>
    </item>
    
    <item>
      <title>ElasticJob 发布指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/release/elasticjob/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/release/elasticjob/</guid>
      <description>发布准备 GPG 设置 详情请参见发布指南。
设置 settings.xml 文件 将以下模板添加到 ~/.m2/settings.xml 中，所有密码需要加密后再填入。 加密设置可参考这里。
&amp;lt;settings&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;apache.snapshots.https&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt; &amp;lt;!-- APACHE LDAP 用户名 --&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;!-- APACHE LDAP 加密后的密码 --&amp;gt; &amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;apache.releases.https&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt; &amp;lt;!-- APACHE LDAP 用户名 --&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;!-- APACHE LDAP 加密后的密码 --&amp;gt; &amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;/settings&amp;gt; Apache Snapshot 发布 部署到 Apache Snapshot 仓库 1. 确保本地构建项目正常
./mvnw clean install 2. 部署 Snapshot 仓库
./mvnw deploy -DrepositoryId=apache.snapshots.https -T1C 3. 检查 Snapshot 仓库上传结果</description>
    </item>
    
    <item>
      <title>ElasticJob UI 发布指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/release/elasticjob-ui/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/release/elasticjob-ui/</guid>
      <description>GPG 设置 详情请参见发布指南。
发布 Apache Maven 中央仓库 1. 设置 settings.xml 文件
将以下模板添加到 ~/.m2/settings.xml 中，所有密码需要加密后再填入。 加密设置可参考这里。
&amp;lt;settings&amp;gt; &amp;lt;servers&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;apache.snapshots.https&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt; &amp;lt;!-- APACHE LDAP 用户名 --&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;!-- APACHE LDAP 加密后的密码 --&amp;gt; &amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;server&amp;gt; &amp;lt;id&amp;gt;apache.releases.https&amp;lt;/id&amp;gt; &amp;lt;username&amp;gt; &amp;lt;!-- APACHE LDAP 用户名 --&amp;gt; &amp;lt;/username&amp;gt; &amp;lt;password&amp;gt; &amp;lt;!-- APACHE LDAP 加密后的密码 --&amp;gt; &amp;lt;/password&amp;gt; &amp;lt;/server&amp;gt; &amp;lt;/servers&amp;gt; &amp;lt;/settings&amp;gt; 2. 更新版本说明
https://github.com/apache/shardingsphere-elasticjob-ui/blob/master/RELEASE-NOTES.md 3. 创建发布分支
假设从 Github 下载的 ElasticJob-UI 源代码在 ~/elasticjob-ui/ 目录；假设即将发布的版本为 ${RELEASE.VERSION}。 创建 ${RELEASE.VERSION}-release 分支，接下来的操作都在该分支进行。
## ${name} 为源码所在分支，如：master，dev-4.</description>
    </item>
    
  </channel>
</rss>