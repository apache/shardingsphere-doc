commit 3548ec4a2a1980bc1fa0c4292db4a191fa6c1031
Author: 孙念君 Nianjun Sun <sunnianjun@apache.org>
Date:   Wed Oct 23 11:56:51 2024 +0800

    update the release document (#33359)
    
    * Refactor : update the release document
    
    * Refactor : update the release document
    
    * Refactor : update the release document

diff --git a/docs/community/content/involved/release/elasticjob-ui.cn.md b/docs/community/content/involved/release/elasticjob-ui.cn.md
index f79e3a864eb..5aea7c5e403 100644
--- a/docs/community/content/involved/release/elasticjob-ui.cn.md
+++ b/docs/community/content/involved/release/elasticjob-ui.cn.md
@@ -288,13 +288,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -322,7 +322,7 @@ Checklist for reference:
 正文：
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -330,7 +330,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
diff --git a/docs/community/content/involved/release/elasticjob-ui.en.md b/docs/community/content/involved/release/elasticjob-ui.en.md
index 37fd087e8fe..e82ef1033a2 100644
--- a/docs/community/content/involved/release/elasticjob-ui.en.md
+++ b/docs/community/content/involved/release/elasticjob-ui.en.md
@@ -12,7 +12,7 @@ Please refer to [Release Guide](/en/involved/release/shardingsphere/).
 
 **1. Set settings.xml**
 
-Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption. 
+Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption.
 For encryption settings, please see [here](http://maven.apache.org/guides/mini/guide-encryption.html).
 
 ```xml
@@ -40,7 +40,7 @@ https://github.com/apache/shardingsphere-elasticjob-ui/blob/master/RELEASE-NOTES
 
 **3. Create Release Branch**
 
-Suppose ElasticJob-UI source codes downloaded from github is under `~/elasticjob-ui/` directory and the version to be released is `${RELEASE.VERSION}`. 
+Suppose ElasticJob-UI source codes downloaded from github is under `~/elasticjob-ui/` directory and the version to be released is `${RELEASE.VERSION}`.
 Create `${RELEASE.VERSION}-release` branch, where all the following operations are performed.
 
 ```shell
@@ -119,7 +119,7 @@ cd ~/ss_svn/dev/shardingsphere
 
 **2. Add gpg Public Key**
 
-Only the account in its first deployment needs to add that. 
+Only the account in its first deployment needs to add that.
 It is alright for `KEYS` to only include the public key of the deployed account.
 
 ```shell
@@ -174,7 +174,7 @@ shasum -c apache-shardingsphere-elasticjob-${RELEASE.VERSION}-cloud-ui-bin.tar.g
 
 **Check gpg Signature**
 
-First, import releaser's public key. 
+First, import releaser's public key.
 Import KEYS from SVN repository to local. (The releaser does not need to import again; the checking assistant needs to import it, with the user name filled as the releaser's. )
 
 ```shell
@@ -245,8 +245,8 @@ to check the following items:
 
 **Vote procedure**
 
-1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`. 
-PMC needs to check the rightness of the version according to the document before they vote. 
+1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`.
+PMC needs to check the rightness of the version according to the document before they vote.
 After at least 72 hours and with at least 3 `+1 PMC member` votes, it can come to the next stage of the vote.
 
 2. Announce the vote result: send the result vote e-mail to `dev@shardingsphere.apache.org`.
@@ -294,13 +294,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -328,7 +328,7 @@ Title：
 Body:
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -336,7 +336,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 
 ```
diff --git a/docs/community/content/involved/release/elasticjob.cn.md b/docs/community/content/involved/release/elasticjob.cn.md
index aba5021ce8a..8f13970a61e 100644
--- a/docs/community/content/involved/release/elasticjob.cn.md
+++ b/docs/community/content/involved/release/elasticjob.cn.md
@@ -311,13 +311,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -345,7 +345,7 @@ Checklist for reference:
 正文：
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding votes" and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -353,7 +353,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
diff --git a/docs/community/content/involved/release/elasticjob.en.md b/docs/community/content/involved/release/elasticjob.en.md
index fea7ca14804..13495a5d921 100644
--- a/docs/community/content/involved/release/elasticjob.en.md
+++ b/docs/community/content/involved/release/elasticjob.en.md
@@ -69,7 +69,7 @@ Update the POM of the module `examples`, changing the version from ${CURRENT.VER
 
 **2. Create Release Branch**
 
-Suppose ElasticJob source codes downloaded from github is under `~/elasticjob/` directory and the version to be released is `${RELEASE.VERSION}`. 
+Suppose ElasticJob source codes downloaded from github is under `~/elasticjob/` directory and the version to be released is `${RELEASE.VERSION}`.
 Create `${RELEASE.VERSION}-release` branch, where all the following operations are performed.
 
 ```shell
@@ -122,9 +122,9 @@ git push origin --tags
 mvn release:perform -Prelease -Darguments="-DskipTests" -DautoVersionSubmodules=true -Dusername=${Github username}
 ```
 
-After that command is executed, the version to be released will be uploaded to Apache staging repository automatically. 
-Visit [https://repository.apache.org/#stagingRepositories](https://repository.apache.org/#stagingRepositories) and use Apache LDAP account to log in; then you can see the uploaded version, the content of `Repository` column is the ${STAGING.REPOSITORY}. 
-Click `Close` to tell Nexus that the construction is finished, because only in this way, this version can be usable. 
+After that command is executed, the version to be released will be uploaded to Apache staging repository automatically.
+Visit [https://repository.apache.org/#stagingRepositories](https://repository.apache.org/#stagingRepositories) and use Apache LDAP account to log in; then you can see the uploaded version, the content of `Repository` column is the ${STAGING.REPOSITORY}.
+Click `Close` to tell Nexus that the construction is finished, because only in this way, this version can be usable.
 If there is any problem in gpg signature, `Close` will fail, but you can see the failure information through `Activity`.
 
 ### Apache SVN Repository Release
@@ -147,7 +147,7 @@ cd ~/ss_svn/dev/shardingsphere
 
 **2. Add gpg Public Key**
 
-Only the account in its first deployment needs to add that. 
+Only the account in its first deployment needs to add that.
 It is alright for `KEYS` to only include the public key of the deployed account.
 
 ```shell
@@ -261,8 +261,8 @@ to check the following items:
 
 **Vote procedure**
 
-1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`. 
-PMC needs to check the rightness of the version according to the document before they vote. 
+1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`.
+PMC needs to check the rightness of the version according to the document before they vote.
 After at least 72 hours and with at least 3 `+1 PMC member` votes, it can come to the next stage of the vote.
 
 2. Announce the vote result: send the result vote e-mail to `dev@shardingsphere.apache.org`.
@@ -313,13 +313,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -347,7 +347,7 @@ Title：
 Body:
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -355,7 +355,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 
 ```
diff --git a/docs/community/content/involved/release/shardingsphere-on-cloud.cn.md b/docs/community/content/involved/release/shardingsphere-on-cloud.cn.md
index 74b31594ebc..1bff5b85b2c 100644
--- a/docs/community/content/involved/release/shardingsphere-on-cloud.cn.md
+++ b/docs/community/content/involved/release/shardingsphere-on-cloud.cn.md
@@ -100,7 +100,7 @@ Please specify how long the key should be valid.
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
-Key is valid for? (0) 
+Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
 
@@ -330,13 +330,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -358,7 +358,7 @@ Checklist for reference:
 正文：
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -366,7 +366,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
@@ -440,7 +440,7 @@ Hi all,
 
 Apache ShardingSphere Team is glad to announce the new release of Apache ShardingSphere on Cloud ${RELEASE.VERSION}.
 
-The shardingsphere-on-cloud project, including ShardingSphere Operator, Helm Charts, and other cloud solutions, aims at enhancing the deployment and management capabilities of Apache ShardingSphere Proxy on the cloud. 
+The shardingsphere-on-cloud project, including ShardingSphere Operator, Helm Charts, and other cloud solutions, aims at enhancing the deployment and management capabilities of Apache ShardingSphere Proxy on the cloud.
 ShardingSphere Operator is a Kubernetes software extension written with the Operator extension pattern of Kubernetes. ShardingSphere Operator can be used to quickly deploy an Apache ShardingSphere Proxy cluster in the Kubernetes environment and manage the entire cluster life cycle.
 
 Download Links: https://github.com/apache/shardingsphere-on-cloud/releases/tag/${RELEASE.VERSION}
diff --git a/docs/community/content/involved/release/shardingsphere-on-cloud.en.md b/docs/community/content/involved/release/shardingsphere-on-cloud.en.md
index 75796c46850..76d76d7e3a2 100644
--- a/docs/community/content/involved/release/shardingsphere-on-cloud.en.md
+++ b/docs/community/content/involved/release/shardingsphere-on-cloud.en.md
@@ -101,7 +101,7 @@ Please specify how long the key should be valid.
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
-Key is valid for? (0) 
+Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
 
@@ -333,13 +333,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -362,7 +362,7 @@ Title：
 Body：
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -370,7 +370,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
@@ -444,7 +444,7 @@ Hi all,
 
 Apache ShardingSphere Team is glad to announce the new release of Apache ShardingSphere on Cloud ${RELEASE.VERSION}.
 
-The shardingsphere-on-cloud project, including ShardingSphere Operator, Helm Charts, and other cloud solutions, aims at enhancing the deployment and management capabilities of Apache ShardingSphere Proxy on the cloud. 
+The shardingsphere-on-cloud project, including ShardingSphere Operator, Helm Charts, and other cloud solutions, aims at enhancing the deployment and management capabilities of Apache ShardingSphere Proxy on the cloud.
 ShardingSphere Operator is a Kubernetes software extension written with the Operator extension pattern of Kubernetes. ShardingSphere Operator can be used to quickly deploy an Apache ShardingSphere Proxy cluster in the Kubernetes environment and manage the entire cluster life cycle.
 
 Download Links: https://github.com/apache/shardingsphere-on-cloud/releases/tag/${RELEASE.VERSION}
diff --git a/docs/community/content/involved/release/shardingsphere.cn.md b/docs/community/content/involved/release/shardingsphere.cn.md
index a5c1df1bf71..90cea889932 100644
--- a/docs/community/content/involved/release/shardingsphere.cn.md
+++ b/docs/community/content/involved/release/shardingsphere.cn.md
@@ -104,7 +104,7 @@ Please specify how long the key should be valid.
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
-Key is valid for? (0) 
+Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
 
@@ -477,13 +477,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -500,7 +500,7 @@ Checklist for reference:
 [ ] No compiled archives bundled in source archive.
 ```
 
-> 注意：`Release Commit ID` 使用发布分支上与 `prepare release ${RELEASE.VERSION}` 日志对应的 commit id。 
+> 注意：`Release Commit ID` 使用发布分支上与 `prepare release ${RELEASE.VERSION}` 日志对应的 commit id。
 
 2. 宣布投票结果模板：
 
@@ -513,7 +513,7 @@ Checklist for reference:
 正文：
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -521,7 +521,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 ```
 
diff --git a/docs/community/content/involved/release/shardingsphere.en.md b/docs/community/content/involved/release/shardingsphere.en.md
index 483cb090e49..072694acb3f 100644
--- a/docs/community/content/involved/release/shardingsphere.en.md
+++ b/docs/community/content/involved/release/shardingsphere.en.md
@@ -16,7 +16,7 @@ Check and update year in NOTICE.
 
 ### 2. Confirm Release Notes
 
-The release note should be provided in English / Chinese, confirm whether English and Chinese description are clear, 
+The release note should be provided in English / Chinese, confirm whether English and Chinese description are clear,
 and shall be classified according to the following labels:
 
 1. New Feature
@@ -42,7 +42,7 @@ Open [GitHub issues](https://github.com/apache/shardingsphere/issues), filter th
 
 Open [GitHub pull requests](https://github.com/apache/shardingsphere/pulls), filter pull requests whose milestone is `${RELEASE.VERSION}` and status is open:
 
-1. Review the open pull request and merge; 
+1. Review the open pull request and merge;
 1. For pull requests that cannot merge and do not affect this release, modify milestone to the next version;
 1. Confirm that there is no open pull request under milestone of release version.
 
@@ -56,8 +56,8 @@ Open [GitHub pull requests](https://github.com/apache/shardingsphere/pulls), fil
 
 ### 1. Install GPG
 
-Download installation package on [official GnuPG website](https://www.gnupg.org/download/index.html). 
-The command of GnuPG 1.x version can differ a little from that of 2.x version. 
+Download installation package on [official GnuPG website](https://www.gnupg.org/download/index.html).
+The command of GnuPG 1.x version can differ a little from that of 2.x version.
 The following instructions take `GnuPG-2.1.23` version for example.
 After the installation, execute the following command to check the version number.
 
@@ -105,7 +105,7 @@ Please specify how long the key should be valid.
      <n>w = key expires in n weeks
      <n>m = key expires in n months
      <n>y = key expires in n years
-Key is valid for? (0) 
+Key is valid for? (0)
 Key does not expire at all
 Is this correct? (y/N) y
 
@@ -147,7 +147,7 @@ The command is as follows:
 gpg --keyserver hkp://keyserver.ubuntu.com --send-key 700E6065
 ```
 
-`keyserver.ubuntu.com` is randomly chosen from public key server. 
+`keyserver.ubuntu.com` is randomly chosen from public key server.
 Each server will automatically synchronize with one another, so it would be okay to choose any one.
 
 ## Prepare Branch for Release
@@ -208,7 +208,7 @@ Update `MAJOR_DRIVER_VERSION` and `MINOR_DRIVER_VERSION` in ShardingSphereDriver
 
 ### 1. Set settings-security.xml and settings.xml
 
-Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption. 
+Add the following template to `~/.m2/settings.xml`, all the passwords need to be filled in after encryption.
 For encryption settings, please see [here](http://maven.apache.org/guides/mini/guide-encryption.html).
 
 ```xml
@@ -276,9 +276,9 @@ git push origin ${RELEASE.VERSION}
 
 -DlocalCheckout=true: checkout code from local repository instead of remote repository.
 
-After that command is executed, the version to be released will be uploaded to Apache staging repository automatically. 
+After that command is executed, the version to be released will be uploaded to Apache staging repository automatically.
 
-Visit [staging repository](https://repository.apache.org/#stagingRepositories) and use Apache LDAP account to log in; then you can see the uploaded version, the content of `Repository` column is the ${STAGING.REPOSITORY}. 
+Visit [staging repository](https://repository.apache.org/#stagingRepositories) and use Apache LDAP account to log in; then you can see the uploaded version, the content of `Repository` column is the ${STAGING.REPOSITORY}.
 
 Click `Close` to tell Nexus that the construction is finished, because only in this way, this version can be usable.
 If there is any problem in gpg signature, `Close` will fail, but you can see the failure information through `Activity`.
@@ -303,7 +303,7 @@ cd ~/ss_svn/dev/shardingsphere
 
 ### 2. Add gpg Public Key and commit
 
-Only the account in its **first deployment** needs to add that. 
+Only the account in its **first deployment** needs to add that.
 It is alright for `KEYS` to only include the public key of the deployed account.
 
 ```shell
@@ -409,7 +409,7 @@ diff -r apache-shardingsphere-${RELEASE.VERSION}-src-release shardingsphere-${RE
 
 **3.3 Check binary packages**
 
-Decompress 
+Decompress
 - `apache-shardingsphere-${RELEASE.VERSION}-shardingsphere-jdbc-bin.tar.gz`
 - `apache-shardingsphere-${RELEASE.VERSION}-shardingsphere-proxy-bin.tar.gz`
 - `apache-shardingsphere-${RELEASE.VERSION}-shardingsphere-agent-bin.tar.gz`
@@ -429,8 +429,8 @@ And check the following items:
 
 **Vote procedure**
 
-1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`. 
-PMC needs to check the rightness of the version according to the document before they vote. 
+1. ShardingSphere community vote: send the vote e-mail to `dev@shardingsphere.apache.org`.
+PMC needs to check the rightness of the version according to the document before they vote.
 After at least **72 hours** and with at least **3 `+1 PMC member`** votes, it can come to the next stage of the vote.
 
 2. Announce the vote result: send the result vote e-mail to [dev@shardingsphere.apache.org](mailto:dev@shardingsphere.apache.org).
@@ -481,13 +481,13 @@ The vote will be open for at least 72 hours or until necessary number of votes a
 
 Please vote accordingly:
 
-[ ] +1 approve 
+[ ] +1 approve
 
 [ ] +0 no opinion
- 
+
 [ ] -1 disapprove with the reason
 
-PMC vote is +1 binding, all others is +1 non-binding.
+PMC vote is "+1 binding", all others is "+1 non-binding".
 
 Checklist for reference:
 
@@ -517,7 +517,7 @@ Title：
 Body:
 
 ```
-We’ve received 3 +1 binding votes and one +1 non-binding vote:
+We’ve received 3 "+1 binding" votes and one "+1 non-binding" vote:
 
 +1 binding, xxx
 +1 binding, xxx
@@ -525,7 +525,7 @@ We’ve received 3 +1 binding votes and one +1 non-binding vote:
 
 +1 non-binding, xxx
 
-Thank you everyone for taking the time to review the release and help us. 
+Thank you everyone for taking the time to review the release and help us.
 I will process to publish the release and send ANNOUNCE.
 
 ```
@@ -598,7 +598,7 @@ Keep the latest version in [**Release Area**](https://dist.apache.org/repos/dist
 
 Incubating stage versions will be archived automatically in [Archive repository](https://archive.apache.org/dist/incubator/shardingsphere/)
 
-Remove the previous release from the [**Release Area**](https://dist.apache.org/repos/dist/release/shardingsphere/) after confirming the previous release exists in [Archive repository](https://archive.apache.org/dist/shardingsphere/), 
+Remove the previous release from the [**Release Area**](https://dist.apache.org/repos/dist/release/shardingsphere/) after confirming the previous release exists in [Archive repository](https://archive.apache.org/dist/shardingsphere/),
 
 ```shell
 svn del -m "Archiving release ${PREVIOUS.RELEASE.VERSION}" https://dist.apache.org/repos/dist/release/shardingsphere/${PREVIOUS.RELEASE.VERSION}
