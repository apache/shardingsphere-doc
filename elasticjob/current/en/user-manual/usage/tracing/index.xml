<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tracing on ElasticJob</title>
    <link>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/</link>
    <description>Recent content in Tracing on ElasticJob</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Use Java API</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/java-api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/java-api/</guid>
      <description>ElasticJob currently provides TracingConfiguration based on database in the configuration. Developers can also extend it through SPI.
// init DataSource  DataSource dataSource = ...; // define tracing configuration based on relation database  TracingConfiguration tracingConfig = new TracingConfiguration&amp;lt;&amp;gt;(&amp;#34;RDB&amp;#34;, dataSource); // init registry center  CoordinatorRegistryCenter regCenter = ...; // init job configuration  JobConfiguration jobConfig = ...; jobConfig.getExtraConfigurations().add(tracingConfig); new ScheduleJobBootstrap(regCenter, jobConfig).schedule(); </description>
    </item>
    
    <item>
      <title>Use Spring Boot Starter</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/spring-boot-starter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/spring-boot-starter/</guid>
      <description>ElasticJob Spring Boot Starter has already integrated TracingConfiguration configuration. What developers need to do is register a bean of DataSource into the Spring IoC Container and set the type of data source. Then the Starter will create an instance of TracingConfiguration and register it into the container.
Import Maven Dependency Import spring-boot-starter-jdbc for DataSource register or create a bean of DataSource manually.
&amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.springframework.boot&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;spring-boot-starter-jdbc&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${springboot.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Configuration spring: datasource: url: jdbc:h2:mem:job_event_storage driver-class-name: org.</description>
    </item>
    
    <item>
      <title>Use Spring Namespace</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/spring-namespace/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/spring-namespace/</guid>
      <description>Import Maven Dependency &amp;lt;dependency&amp;gt; &amp;lt;groupId&amp;gt;org.apache.shardingsphere.elasticjob&amp;lt;/groupId&amp;gt; &amp;lt;artifactId&amp;gt;elasticjob-spring-namespace&amp;lt;/artifactId&amp;gt; &amp;lt;version&amp;gt;${elasticjob.latest.version}&amp;lt;/version&amp;gt; &amp;lt;/dependency&amp;gt; Configuration &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;beans xmlns=&amp;#34;http://www.springframework.org/schema/beans&amp;#34; xmlns:xsi=&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34; xmlns:elasticjob=&amp;#34;http://shardingsphere.apache.org/schema/elasticjob&amp;#34; xsi:schemaLocation=&amp;#34;http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://shardingsphere.apache.org/schema/elasticjob http://shardingsphere.apache.org/schema/elasticjob/elasticjob.xsd &amp;#34;&amp;gt; &amp;lt;!-- Configure registry center for job --&amp;gt; &amp;lt;elasticjob:zookeeper id=&amp;#34;regCenter&amp;#34; server-lists=&amp;#34;yourhost:2181&amp;#34; namespace=&amp;#34;my-job&amp;#34; base-sleep-time-milliseconds=&amp;#34;1000&amp;#34; max-sleep-time-milliseconds=&amp;#34;3000&amp;#34; max-retries=&amp;#34;3&amp;#34; /&amp;gt; &amp;lt;!-- Configure job java bean --&amp;gt; &amp;lt;bean id=&amp;#34;myJob&amp;#34; class=&amp;#34;xxx.MyJob&amp;#34; /&amp;gt; &amp;lt;!-- Configure DataSource --&amp;gt; &amp;lt;bean id=&amp;#34;tracingDataSource&amp;#34; class=&amp;#34;com.zaxxer.hikari.HikariDataSource&amp;#34; destroy-method=&amp;#34;close&amp;#34;&amp;gt; &amp;lt;property name=&amp;#34;driverClassName&amp;#34; value=&amp;#34;${driver.class.name}&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;jdbcUrl&amp;#34; value=&amp;#34;${url}&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;username&amp;#34; value=&amp;#34;${username}&amp;#34; /&amp;gt; &amp;lt;property name=&amp;#34;password&amp;#34; value=&amp;#34;${password}&amp;#34; /&amp;gt; &amp;lt;/bean&amp;gt; &amp;lt;!</description>
    </item>
    
    <item>
      <title>Table Structure</title>
      <link>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/table-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/elasticjob/current/en/user-manual/usage/tracing/table-structure/</guid>
      <description>The database which is the value of the event tracing property event_trace_rdb_url will automatically create two tables JOB_EXECUTION_LOG and JOB_STATUS_TRACE_LOG and several indexes.
JOB_EXECUTION_LOG Columns    Column name Column type Required Describe     id VARCHAR(40) Yes Primary key   job_name VARCHAR(100) Yes Job name   task_id VARCHAR(1000) Yes Task name, create new tasks every time the job runs.   hostname VARCHAR(255) Yes Hostname   ip VARCHAR(50) Yes IP   sharding_item INT Yes Sharding item   execution_source VARCHAR(20) Yes Source of job execution.</description>
    </item>
    
  </channel>
</rss>
