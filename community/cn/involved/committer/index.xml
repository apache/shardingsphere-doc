<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>提交者指南 on ShardingSphere</title>
    <link>https://shardingsphere.apache.org/community/cn/involved/committer/</link>
    <description>Recent content in 提交者指南 on ShardingSphere</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://shardingsphere.apache.org/community/cn/involved/committer/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>责任与工作范围</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/committer/responsibilities/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/committer/responsibilities/</guid>
      <description>责任  开发新功能； 代码重构； 及时和可靠的评审 Pull Request； 思考和接纳新特性请求； 解答问题； 维护文档和代码示例； 改进流程和工具； 定期检查 CI Scheduled Workflow 是否正常运行； 引导新的参与者融入社区。  日常工作  Committer 需要每天查看社区待处理的 Pull Request 和 Issue 列表，负责问题的处理：   包括标记 issue，回复 issue，关闭 issue 等； 将 issue 分配至熟悉该模块的贡献者；  Assignee 在被分配 issue 后，需要进行如下判断：   判断是否是长期 issue，如是，则标记为 pending； 判断 issue 类型，如：bug，enhancement，discussion 等； 标记 Milestone。   Committer 提交的 PR，需要根据 PR 类型和当前发布的周期标注 Label 和 Milestone。
  Committer review PR 时，可以进行 squash and merge to master 的操作，如果有问题可以加上 change request 或者 @ 相关人员协助处理。</description>
    </item>
    
    <item>
      <title>提交者选举流程指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/committer/vote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/committer/vote/</guid>
      <description>Apache ShardingSphere 社区遵循 Apache Community’s process 来接收新的提交者。 当您积极地参与社区之后，项目管理委员会和项目官方提交者会根据您的表现发起吸纳您成为官方提交者和项目管理委员会成员的流程。
1. 在 @private 邮件列表讨论并投票，投票由现有的 PMC 成员发起，邮件内容主要陈述提名者的活动和社区贡献。
例如：
To: private@shardingsphere.apache.org Title: [VOTE] New committer: (提名者) Content: Hi, everyone This is ^a formal vote^ about inviting (提名者) as our new committer. He/She really made an effort to improve ShardingSphere Parser and fix many issues. The following links will direct you to his/her work. https://github.com/apache/shardingsphere/pull/xxxx https://github.com/apache/shardingsphere/pull/xxxx https://github.com/apache/shardingsphere/pull/xxxx https://github.com/apache/shardingsphere/pull/xxxx [^ means these words are subject to change in different case] 2.</description>
    </item>
    
    <item>
      <title>签署 iCLA 指南</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/committer/icla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/committer/icla/</guid>
      <description>Apache ICLA 签署流程指南 Apache CLA 全称 Apache Contributor License Agreement，签署 ICLA 的目的是定义向 ASF 贡献的文档，保护知识产权，避免后续法律纠纷。ICLA 在官方存档后生效，贡献者方可参与 Apache 项目。
当我们需要签署 ICLA 时步骤如下:
1. 打开链接 官网 Licenses 在 Contributor License Agreements 下找到 CLAs 并进入页面。
2. 在页面上方我们可以看到两个下载链接，选择 ICLA （个人 CLA）并下载文件。
3. 打开 PDF，ICLA 需要填写的是两个部分，均需要全英文填写。
 注意事项:
 姓名需要填写拼音，姓与名之间空一格，首字母均为大写，名在前姓氏在后。 Committer 相关的签署，则 preferred Apache id（s） 是必填项。   4.文件最下方的署名。 官方只接受手写或者 gpg 签名，这里只建议用手写的方式，可以打印文件进行手写签名或者使用电子笔进行签字。
提交文件  如果您是新 Committer，请扫描签署后文件的所有页合并到一个 PDF 的文档，发送 email 到 secretary@apache.org。 其他情况，请联系需要您签署 ICLA 文档的负责人。  </description>
    </item>
    
    <item>
      <title>2FA</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/committer/2fa/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/committer/2fa/</guid>
      <description>双因素认证（2FA） 双因子验证（2FA）是指结合密码以及实物（信用卡、SMS 手机、令牌或指纹等生物标志）两种条件对用户进行认证的方法。 为保证提交者账户的安全，我们需要您在 GitHub 上启用 2FA 来验证登录用户、并贡献代码。
具体内容可参考 2FA。
 注意：若您不启用 2FA，您将会从本项目中除名，并且无法访问我们的仓库以及来自我们私有仓库的 fork 仓库。
 在 GitHub 上启用 2FA 具体操作，请参考使用 TOTP 启用双因素认证。
当您开启 2FA 验证后，您需要使用用户名/密码 + 手机认证码的方式来登录 GitHub。
提示：若无法通过页面链接下载对应 APP，可在手机的应用市场或是 APP Store 里搜索并下载 Google Authenticator。
如何提交代码 当启用 2FA 认证后，您需要生成私有访问 Token 来进行 git 提交等操作。此时，您将使用用户名 + 私有访问 Token 来代替 用户名 + 密码的方式 进行代码的提交。
具体操作，请参考创建私有 Token。</description>
    </item>
    
    <item>
      <title>提交者权益</title>
      <link>https://shardingsphere.apache.org/community/cn/involved/committer/commiter_rights/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://shardingsphere.apache.org/community/cn/involved/committer/commiter_rights/</guid>
      <description>提交者权益 每个 Apache Committer 都有资格获得免费 JetBrains 订阅，使他们能够访问 JetBrains 产品包，如 IntelliJ IDEA、PyCharm 和其他桌面工具。
获取免费 JetBrains 订阅 如果您是 Apache ShardingSphere 提交者，但未收到免费的 JetBrains 订阅，请使用您的 @apache.org 电子邮件地址 立即获取免费的所有产品包 以便于 ShardingSphere 的后续开发。
重新激活 JetBrains 到期订阅 如果您已经使用了免费的 JetBrains 订阅，遇到 License 到期，可以使用您的 @apache.org 电子邮件地址 续订免费的所有产品包，并在您的 JetBrains 桌面工具（例如 IntelliJ IDEA） 中点击 Refresh license list 刷新订阅。</description>
    </item>
    
  </channel>
</rss>
