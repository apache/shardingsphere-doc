<?xml version='1.0' encoding='UTF-8'?>
<BugCollection version='4.7.2' threshold='medium' effort='default'><file classname='org.apache.shardingsphere.encrypt.algorithm.encrypt.AESEncryptAlgorithm'><BugInstance type='WEAK_MESSAGE_DIGEST_SHA1' priority='Normal' category='SECURITY' message='This API SHA1 (SHA-1) is not a recommended cryptographic hash function' lineNumber='54'/></file><file classname='org.apache.shardingsphere.encrypt.algorithm.encrypt.MD5EncryptAlgorithm'><BugInstance type='WEAK_MESSAGE_DIGEST_MD5' priority='High' category='SECURITY' message='This API MD5 (MDX) is not a recommended cryptographic hash function' lineNumber='42'/></file><file classname='org.apache.shardingsphere.encrypt.algorithm.like.CharDigestLikeEncryptAlgorithm'><BugInstance type='LEST_LOST_EXCEPTION_STACK_TRACE' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.algorithm.like.CharDigestLikeEncryptAlgorithm.createDelta(Properties) throws alternative exception from catch block without history' lineNumber='79'/><BugInstance type='LEST_LOST_EXCEPTION_STACK_TRACE' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.algorithm.like.CharDigestLikeEncryptAlgorithm.createMask(Properties) throws alternative exception from catch block without history' lineNumber='91'/><BugInstance type='LEST_LOST_EXCEPTION_STACK_TRACE' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.algorithm.like.CharDigestLikeEncryptAlgorithm.createStart(Properties) throws alternative exception from catch block without history' lineNumber='103'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.algorithm.like.CharDigestLikeEncryptAlgorithm.getMaskedChar(char) checks a map with containsKey(), before using get()' lineNumber='169'/></file><file classname='org.apache.shardingsphere.encrypt.exception.algorithm.EncryptAlgorithmInitializationException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.algorithm.EncryptAlgorithmInitializationException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptAssistedQueryColumnNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptAssistedQueryColumnNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptAssistedQueryEncryptorNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptAssistedQueryEncryptorNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptCipherColumnNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptCipherColumnNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptColumnAlterException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptColumnAlterException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptColumnNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptColumnNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptEncryptorNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptEncryptorNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptLikeQueryColumnNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptLikeQueryColumnNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptLikeQueryEncryptorNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptLikeQueryEncryptorNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptLogicColumnNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptLogicColumnNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.metadata.EncryptTableNotFoundException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.metadata.EncryptTableNotFoundException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.syntax.UnsupportedEncryptInsertValueException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.syntax.UnsupportedEncryptInsertValueException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.exception.syntax.UnsupportedEncryptSQLException'><BugInstance type='IMC_IMMATURE_CLASS_BAD_SERIALVERSIONUID' priority='Normal' category='CORRECTNESS' message='Class org.apache.shardingsphere.encrypt.exception.syntax.UnsupportedEncryptSQLException defines a computed serialVersionUID that doesn&apos;t equate to the calculated value' lineNumber='-1'/></file><file classname='org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator.decorate(QueryResult, SQLStatementContext, EncryptRule) uses instanceof on multiple types to arbitrate logic' lineNumber='43'/><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.merge.dal.EncryptDALResultDecorator.decorate(MergedResult, SQLStatementContext, EncryptRule) uses instanceof on multiple types to arbitrate logic' lineNumber='55'/></file><file classname='org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult'><BugInstance type='PRMC_POSSIBLY_REDUNDANT_METHOD_CALLS' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult.getValue(int, Class) appears to call the same method on the same object redundantly' lineNumber='72'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult.getValue(int, Class) passes constant String of length 1 to character overridden method' lineNumber='71'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult.getValue(int, Class) passes constant String of length 1 to character overridden method' lineNumber='72'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult.getValue(int, Class) passes constant String of length 1 to character overridden method' lineNumber='76'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.merge.dal.show.EncryptShowCreateTableMergedResult.lambda$getValue$1(StringBuilder, String) passes constant String of length 1 to character overridden method' lineNumber='74'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine.createCompareEncryptCondition(String, BinaryOperationExpression, ExpressionSegment) uses instanceof on multiple types to arbitrate logic' lineNumber='170'/><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.EncryptConditionEngine.createEncryptCondition(ExpressionSegment, String) uses instanceof on multiple types to arbitrate logic' lineNumber='146'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptBinaryCondition'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptBinaryCondition.putPositionMap(int, ExpressionSegment) uses instanceof on multiple types to arbitrate logic' lineNumber='70'/><BugInstance type='USBR_UNNECESSARY_STORE_BEFORE_RETURN' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptBinaryCondition.hashCode() stores return result in local before immediately returning it' lineNumber='39'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptInCondition'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptInCondition.putPositionMap(int, ExpressionSegment) uses instanceof on multiple types to arbitrate logic' lineNumber='67'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='new org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptInCondition(String, String, int, int, List): 5th parameter &apos;expressionSegments&apos; could be declared as java.lang.Iterable instead' lineNumber='54'/><BugInstance type='USBR_UNNECESSARY_STORE_BEFORE_RETURN' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.condition.impl.EncryptInCondition.hashCode() stores return result in local before immediately returning it' lineNumber='38'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.parameter.EncryptParameterRewriterBuilder'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.parameter.EncryptParameterRewriterBuilder.setUpParameterRewriter(ParameterRewriter) uses instanceof on multiple types to arbitrate logic' lineNumber='76'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.parameter.rewriter.EncryptAssignmentParameterRewriter'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.parameter.rewriter.EncryptAssignmentParameterRewriter.isNeedRewrite(SQLStatementContext) uses instanceof on multiple types to arbitrate logic' lineNumber='60'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.parameter.rewriter.EncryptAssignmentParameterRewriter.encryptParameters(StandardParameterBuilder, String, String, AssignmentSegment, List) uses iterator().next() on a List to get the first item' lineNumber='97'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.parameter.rewriter.EncryptAssignmentParameterRewriter.encryptParameters(StandardParameterBuilder, String, String, AssignmentSegment, List) uses iterator().next() on a List to get the first item' lineNumber='101'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.parameter.rewriter.EncryptAssignmentParameterRewriter.encryptParameters(StandardParameterBuilder, String, String, AssignmentSegment, List) uses iterator().next() on a List to get the first item' lineNumber='105'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.EncryptTokenGenerateBuilder'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.EncryptTokenGenerateBuilder.setUpSQLTokenGenerator(SQLTokenGenerator) uses instanceof on multiple types to arbitrate logic' lineNumber='87'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptAssignmentTokenGenerator'><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptAssignmentTokenGenerator.addAssistedQueryAssignment(String, String, AssignmentSegment, EncryptLiteralAssignmentToken) uses iterator().next() on a List to get the first item' lineNumber='143'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptAssignmentTokenGenerator.addCipherAssignment(String, String, AssignmentSegment, EncryptLiteralAssignmentToken) uses iterator().next() on a List to get the first item' lineNumber='134'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptAssignmentTokenGenerator.addLikeAssignment(String, String, AssignmentSegment, EncryptLiteralAssignmentToken) uses iterator().next() on a List to get the first item' lineNumber='153'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptForUseDefaultInsertColumnsTokenGenerator'><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptForUseDefaultInsertColumnsTokenGenerator.getColumnNames(InsertStatementContext, EncryptTable, List): 3rd parameter &apos;currentColumnNames&apos; could be declared as java.util.Collection instead' lineNumber='92'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptInsertOnUpdateTokenGenerator'><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptInsertOnUpdateTokenGenerator.addCipherAssignment(String, String, AssignmentSegment, EncryptLiteralAssignmentToken) uses iterator().next() on a List to get the first item' lineNumber='186'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptInsertOnUpdateTokenGenerator.lambda$addAssistedQueryAssignment$1(AssignmentSegment, String, String, EncryptLiteralAssignmentToken, String) uses iterator().next() on a List to get the first item' lineNumber='195'/><BugInstance type='SPP_USE_GET0' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptInsertOnUpdateTokenGenerator.lambda$addLikeAssignment$2(AssignmentSegment, String, String, EncryptLiteralAssignmentToken, String) uses iterator().next() on a List to get the first item' lineNumber='205'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateColumnTokenGenerator'><BugInstance type='LSC_LITERAL_STRING_COMPARISON' priority='High' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateColumnTokenGenerator.isLikeColumnSegment(AndPredicate, ColumnSegment) makes literal string comparisons passing the literal as an argument' lineNumber='129'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateColumnTokenGenerator.isSameColumnSegment(ExpressionSegment, ColumnSegment): 2nd parameter &apos;targetColumnSegment&apos; could be declared as org.apache.shardingsphere.sql.parser.sql.common.segment.SQLSegment instead' lineNumber='138'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateRightValueTokenGenerator'><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateRightValueTokenGenerator.generateSQLTokenForQueryWithCipherColumn(String, EncryptCondition, List, int) uses instanceof on multiple types to arbitrate logic' lineNumber='95'/><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateRightValueTokenGenerator.generateSQLTokenForQueryWithoutCipherColumn(String, EncryptCondition, List, int) uses instanceof on multiple types to arbitrate logic' lineNumber='129'/><BugInstance type='PSC_PRESIZE_COLLECTIONS' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateRightValueTokenGenerator.generateSQLTokens(SQLStatementContext) does not presize the allocation of a collection' lineNumber='78'/><BugInstance type='PSC_PRESIZE_COLLECTIONS' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptPredicateRightValueTokenGenerator.getPositionValues(Collection, List) does not presize the allocation of a collection' lineNumber='141'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator'><BugInstance type='ENMI_EQUALS_ON_ENUM' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.generateProjections(String, ColumnProjection, SubqueryType, boolean, ShorthandProjectionSegment) calls equals on an enum instance' lineNumber='150'/><BugInstance type='ENMI_EQUALS_ON_ENUM' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.generateProjections(String, ColumnProjection, SubqueryType, boolean, ShorthandProjectionSegment) calls equals on an enum instance' lineNumber='152'/><BugInstance type='ENMI_EQUALS_ON_ENUM' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.generateProjections(String, ColumnProjection, SubqueryType, boolean, ShorthandProjectionSegment) calls equals on an enum instance' lineNumber='154'/><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.addGenerateSQLTokens(Collection, SelectStatementContext) uses instanceof on multiple types to arbitrate logic' lineNumber='85'/><BugInstance type='ITC_INHERITANCE_TYPE_CHECKING' priority='Normal' category='STYLE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.getColumnTableNames(SelectStatementContext) uses instanceof on multiple types to arbitrate logic' lineNumber='135'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.generateCommonProjection(String, ColumnProjection, ShorthandProjectionSegment): 3rd parameter &apos;segment&apos; could be declared as org.apache.shardingsphere.sql.parser.sql.common.segment.generic.OwnerAvailable instead' lineNumber='202'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.getShorthandProjection(ShorthandProjectionSegment, ProjectionsContext): 1st parameter &apos;segment&apos; could be declared as org.apache.shardingsphere.sql.parser.sql.common.segment.generic.OwnerAvailable instead' lineNumber='216'/><BugInstance type='OI_OPTIONAL_ISSUES_USES_IMMEDIATE_EXECUTION' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rewrite.token.generator.EncryptProjectionTokenGenerator.generateCommonProjection(String, ColumnProjection, ShorthandProjectionSegment) uses immediate execution of a block of code that is often not used' lineNumber='204'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateFunctionRightValueToken'><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateFunctionRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='57'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateFunctionRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='60'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateFunctionRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='67'/></file><file classname='org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken'><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='50'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='53'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='56'/><BugInstance type='UCPM_USE_CHARACTER_PARAMETERIZED_METHOD' priority='Normal' category='PERFORMANCE' message='Method org.apache.shardingsphere.encrypt.rewrite.token.pojo.EncryptPredicateInRightValueToken.toString() passes constant String of length 1 to character overridden method' lineNumber='63'/></file><file classname='org.apache.shardingsphere.encrypt.rule.EncryptRule'><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.findAssistedQueryColumn(String, String) checks a map with containsKey(), before using get()' lineNumber='199'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.findAssistedQueryEncryptor(String, String) checks a map with containsKey(), before using get()' lineNumber='123'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.findEncryptor(String, String) checks a map with containsKey(), before using get()' lineNumber='110'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.findLikeQueryColumn(String, String) checks a map with containsKey(), before using get()' lineNumber='211'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.findLikeQueryEncryptor(String, String) checks a map with containsKey(), before using get()' lineNumber='136'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptRule.getLogicAndCipherColumns(String) checks a map with containsKey(), before using get()' lineNumber='187'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rule.EncryptRule.getEncryptAssistedQueryValues(StandardEncryptAlgorithm, List, EncryptContext): 2nd parameter &apos;originalValues&apos; could be declared as java.lang.Iterable instead' lineNumber='246'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rule.EncryptRule.getEncryptLikeQueryValues(LikeEncryptAlgorithm, List, EncryptContext): 2nd parameter &apos;originalValues&apos; could be declared as java.lang.Iterable instead' lineNumber='274'/><BugInstance type='OCP_OVERLY_CONCRETE_PARAMETER' priority='Normal' category='STYLE' message='org.apache.shardingsphere.encrypt.rule.EncryptRule.getEncryptValues(StandardEncryptAlgorithm, List, EncryptContext): 2nd parameter &apos;originalValues&apos; could be declared as java.lang.Iterable instead' lineNumber='160'/></file><file classname='org.apache.shardingsphere.encrypt.rule.EncryptTable'><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findAssistedQueryColumn(String) checks a map with containsKey(), before using get()' lineNumber='183'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findAssistedQueryEncryptorName(String) checks a map with containsKey(), before using get()' lineNumber='72'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findEncryptorName(String) checks a map with containsKey(), before using get()' lineNumber='62'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findLikeQueryColumn(String) checks a map with containsKey(), before using get()' lineNumber='193'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findLikeQueryEncryptorName(String) checks a map with containsKey(), before using get()' lineNumber='82'/><BugInstance type='MUI_CONTAINSKEY_BEFORE_GET' priority='Normal' category='CORRECTNESS' message='Method org.apache.shardingsphere.encrypt.rule.EncryptTable.findPlainColumn(String) checks a map with containsKey(), before using get()' lineNumber='218'/></file><Error></Error><Project><SrcDir>/Users/nianjun/Work/Workspace/PR/shardingsphere/features/encrypt/core/src/main/java</SrcDir><SrcDir>/Users/nianjun/Work/Workspace/PR/shardingsphere/features/encrypt/core/src/test/java</SrcDir></Project></BugCollection>