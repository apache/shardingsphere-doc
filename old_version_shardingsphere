commit c08bce9e1ed7ffe48c5b729c2779bb3861566289
Author: LJ <97254796+DIDA-lJ@users.noreply.github.com>
Date:   Sun May 5 15:48:01 2024 +0800

    Improve unreasonable formatting in documents and Optimize docs (#31119)
    
    * Update Oct_12_2_A_Distributed_Database_Middleware_Ecosystem_Driven_by_Open_Source.cn.md
    
    Improve unreasonable formatting in documents
    
    * Update Oct_12_3_How_Can_Students_Participate_in_Open-Source_Communities.cn.md
    
    Improve unreasonable formatting in documents
    
    * Update Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
    
    Improve unreasonable formatting in documents
    
    * Update Oct_12_5_E-Hualu_ShardingSphere_Hulu_Story_Data_Processing_Shortcut.cn.md
    
    Optimize docs
    
    * Update Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
    
    Improve unreasonable formatting in documents
    
    * Update Oct_12_9_ShardingSphere_JD_Baitiao_Story_of_an_Implementation_Journey.cn.md
    
    Improve unreasonable formatting in documents

diff --git a/docs/blog/content/material/Oct_12_2_A_Distributed_Database_Middleware_Ecosystem_Driven_by_Open_Source.cn.md b/docs/blog/content/material/Oct_12_2_A_Distributed_Database_Middleware_Ecosystem_Driven_by_Open_Source.cn.md
index d287f263cb0..3736db64918 100644
--- a/docs/blog/content/material/Oct_12_2_A_Distributed_Database_Middleware_Ecosystem_Driven_by_Open_Source.cn.md
+++ b/docs/blog/content/material/Oct_12_2_A_Distributed_Database_Middleware_Ecosystem_Driven_by_Open_Source.cn.md
@@ -44,11 +44,11 @@ Apache ShardingSphere 就是位于这一层，通过复用原有数据库的能
 
 面对各种各样的需求以及使用场景，ShardingSphere 为不同领域的开发者提供了面向 Java 的 JDBC、面向异构的代理端以及面向上云的 Sidecar 端这三种接入形式，用户可以按具体需求来做选型，在原有集群之上来做分片、读写分离、数据迁移等相关操作。
 
-* **JDBC 接入：**完全以 JDBC 的方式去使用，可以理解为一款增强的 JDBC 驱动程序，完全兼容 JDBC 和各种 ORM 框架，不需额外的部署和依赖即能够实现分布式管理、水平拓展、脱敏等一系列操作；
+* **JDBC 接入：** 完全以 JDBC 的方式去使用，可以理解为一款增强的 JDBC 驱动程序，完全兼容 JDBC 和各种 ORM 框架，不需额外的部署和依赖即能够实现分布式管理、水平拓展、脱敏等一系列操作；
 
-* **Proxy 接入：**以模拟数据库服务的形式，通过 Proxy 来管理底层真实的数据库集群，基本无需对业务进行改造；
+* **Proxy 接入：** 以模拟数据库服务的形式，通过 Proxy 来管理底层真实的数据库集群，基本无需对业务进行改造；
 
-* **云上 mesh 接入：**为 ShardingSphere 提供公有云上的部署形式。在云上，目前 SphereEx 已经加入了亚马逊云科技的云创计划，后续会在中国区和海外陆续在 Marketplace 与亚马逊云科技展开深度合作，为亚马逊云科技上的用户提供更加强大的 Proxy 镜像部署能力，共同为企业应用打造更加成熟的云上环境。
+* **云上 mesh 接入：** 为 ShardingSphere 提供公有云上的部署形式。在云上，目前 SphereEx 已经加入了亚马逊云科技的云创计划，后续会在中国区和海外陆续在 Marketplace 与亚马逊云科技展开深度合作，为亚马逊云科技上的用户提供更加强大的 Proxy 镜像部署能力，共同为企业应用打造更加成熟的云上环境。
 
 
 
diff --git a/docs/blog/content/material/Oct_12_3_How_Can_Students_Participate_in_Open-Source_Communities.cn.md b/docs/blog/content/material/Oct_12_3_How_Can_Students_Participate_in_Open-Source_Communities.cn.md
index b4723688d95..3f4787e5045 100644
--- a/docs/blog/content/material/Oct_12_3_How_Can_Students_Participate_in_Open-Source_Communities.cn.md
+++ b/docs/blog/content/material/Oct_12_3_How_Can_Students_Participate_in_Open-Source_Communities.cn.md
@@ -20,7 +20,7 @@ chapter = true
 
 * 获得奖学金
 
-##下一个问题就是如何利用这些具有吸引力的项目加入开源中？
+## 下一个问题就是如何利用这些具有吸引力的项目加入开源中？
 
 虽然基本过程大体相同，但不同项目有不同规则，有些规则往往是明确的，即：
 
@@ -101,4 +101,4 @@ ShardingSphere Slack Channel: [https://join.slack.com/t/apacheshardingsphere/sha
 
 [5] https://issues.apache.org/jira/browse/COMDEV-385 
 
-[6] https://github.com/apache/shardingsphere
\ No newline at end of file
+[6] https://github.com/apache/shardingsphere
diff --git a/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md b/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
index 68dea33bb98..dff36aa68c6 100644
--- a/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
+++ b/docs/blog/content/material/Oct_12_4_Updates_and_FAQ_Your_1_Minute_Quick_Start_Guide_to_ShardingSphere.cn.md
@@ -98,13 +98,13 @@ ShardingSphere-JDBC 示例模块，展示 ShardingSphere-JDBC 的功能特性和
 
 展示 ShardingSphere-JDBC 在分布式治理方面的应用，包含了分库分表、读写分离、数据加密、影子库等特性与分布式治理相结合的应用场景。
 
-**注意：**分布式治理 example 依赖 Apache ZooKeeper，请自行部署。
+**注意：** 分布式治理 example 依赖 Apache ZooKeeper，请自行部署。
 
 **（3）transaction-example**
 
 展示 ShardingSphere-JDBC 支持的多种分布式事务管理方式，用户可以根据应用场景选择适合的分布式事务管理器进行使用。鉴于分布式事务的特殊性，本模块的示例都是基于分库、分表或分库+分表的场景设计的。
 
-**注意：**Seata 事务管理器需要自行部署。
+**注意：** Seata 事务管理器需要自行部署。
 
 **（4）other-feature-example**
 
@@ -291,7 +291,7 @@ https://shardingsphere.apache.org/document/current/cn/user-manual/shardingsphere
 
 此时即可通过日志中的「Logic SQL」和「Actual SQL」观察每一条 SQL 语句的路由情况，理解读写分离的运行机制。
 
-**注意：**如果主从数据库无法正常同步，将会发生查询异常。
+**注意：** 如果主从数据库无法正常同步，将会发生查询异常。
 
 * **custom-sharding-algortihm-example「自定义算法场景」**
 
diff --git a/docs/blog/content/material/Oct_12_5_E-Hualu_ShardingSphere_Hulu_Story_Data_Processing_Shortcut.cn.md b/docs/blog/content/material/Oct_12_5_E-Hualu_ShardingSphere_Hulu_Story_Data_Processing_Shortcut.cn.md
index f9e5e9593c2..e7eedf3003e 100644
--- a/docs/blog/content/material/Oct_12_5_E-Hualu_ShardingSphere_Hulu_Story_Data_Processing_Shortcut.cn.md
+++ b/docs/blog/content/material/Oct_12_5_E-Hualu_ShardingSphere_Hulu_Story_Data_Processing_Shortcut.cn.md
@@ -10,7 +10,7 @@ chapter = true
 ——史墨轩，易华录·技术总监
 ~~~
 
-今年以来，伴随着易华录旗下面向个人用户的云服务产品**【葫芦 App】**正式上线，后台架构所承受的业务压力也与日俱增。
+今年以来，伴随着易华录旗下面向个人用户的云服务产品 **【葫芦 App】** 正式上线，后台架构所承受的业务压力也与日俱增。
 
 为此，葫芦 App 研发团队选择采用 ShardingSphere 分库分表的功能对数据进行了横向的拆分，围绕 ShardingSphere 灵活敏捷的特性，满足了葫芦 App 业务对数据层扩展性的要求，避免团队重复“造轮子”，最大程度简化了随着业务增长而带来的愈发复杂化的分库分表的开发与维护工作。
 
@@ -48,7 +48,7 @@ chapter = true
 
 **1.可插拔架构的『高扩展性』**
 
-由于业务特性，葫芦 App 原本有限的存储空间被消耗得非常快，并逐渐开始影响用户在前端的响应效率。通过采用 ShardingSphere 的分片策略，葫芦研发团队在应对海量计算+存储所带来的业务问题同时，能够确保分片扩展策略的灵活性。基于此，葫芦团队可以在ShardingSphere 上快速做出相应的功能扩展，为后续架构调整提供优化方案，进一步强化突出了 ShardingSphere 分库分表的优势。
+由于业务特性，葫芦 App 原本有限的存储空间被消耗得非常快，并逐渐开始影响用户在前端的响应效率。通过采用 ShardingSphere 的分片策略，葫芦研发团队在应对海量计算+存储所带来的业务问题同时，能够确保分片扩展策略的灵活性。基于此，葫芦团队可以在 ShardingSphere 上快速做出相应的功能扩展，为后续架构调整提供优化方案，进一步强化突出了 ShardingSphere 分库分表的优势。
 
 **2.距离业务更紧密的『贴合性』**
 
diff --git a/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md b/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
index 1a44e09d62f..15abf7898e3 100644
--- a/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
+++ b/docs/blog/content/material/Oct_12_6_AutoTable_Your_Butler-Like_Sharding_Configuration_Tool.cn.md
@@ -116,7 +116,7 @@ SHARDING_COLUMN=order_id,TYPE(NAME=hash_mod,PROPERTIES("sharding-count"=10))
 DROP SHARDING TABLE RULE t_order;
 ~~~
 
-**注：**若规则修改影响到存量数据，ShardingSphere 还将提供“弹性扩缩容”的功能用作数据迁移，帮助用户方便快捷的管理分布式数据。有关“弹性扩缩容”的具体细节，请关注后续推送。
+**注：** 若规则修改影响到存量数据，ShardingSphere 还将提供“弹性扩缩容”的功能用作数据迁移，帮助用户方便快捷的管理分布式数据。有关“弹性扩缩容”的具体细节，请关注后续推送。
 
 ### FAQ
 
diff --git a/docs/blog/content/material/Oct_12_9_ShardingSphere_JD_Baitiao_Story_of_an_Implementation_Journey.cn.md b/docs/blog/content/material/Oct_12_9_ShardingSphere_JD_Baitiao_Story_of_an_Implementation_Journey.cn.md
index 439af5d7c1d..9092c817a6f 100644
--- a/docs/blog/content/material/Oct_12_9_ShardingSphere_JD_Baitiao_Story_of_an_Implementation_Journey.cn.md
+++ b/docs/blog/content/material/Oct_12_9_ShardingSphere_JD_Baitiao_Story_of_an_Implementation_Journey.cn.md
@@ -64,11 +64,11 @@ Solr + HBase 的方案解决了核心、非核心业务系统对关键数据库
 
 显然京东白条数据架构将迎来一个新的阶段，解耦的驱动力可以概括如下 3 方面：
 
-* **聚焦精力：**将基于架构的数据库拆分，交给分表组件实现，研发精力需聚焦于业务本身；
+* **聚焦精力：** 将基于架构的数据库拆分，交给分表组件实现，研发精力需聚焦于业务本身；
 
-* **简化升级：**解耦技术架构，简化业务系统升级工作的研发流程；
+* **简化升级：** 解耦技术架构，简化业务系统升级工作的研发流程；
 
-* **规划未来：**为系统提供良好的扩展能力，从容应对“618”和“11. 11”等活动。
+* **规划未来：** 为系统提供良好的扩展能力，从容应对“618”和“11. 11”等活动。
 
 京东白条业务体量巨大，是名副其实的金融级高并发、海量数据的业务场景，因此分库分表组件应具有以下特点：
 
@@ -87,13 +87,13 @@ Solr + HBase 的方案解决了核心、非核心业务系统对关键数据库
 
 ShardingSphere-JDBC 的以下特点能够很好地满足白条业务场景：
 
-* **产品成熟：**经数年打磨产品成熟度高，且社区活跃；
+* **产品成熟：** 经数年打磨产品成熟度高，且社区活跃；
 
-* **性能良好：**微内核、轻量化的设计，性能损耗极小；
+* **性能良好：** 微内核、轻量化的设计，性能损耗极小；
 
-* **改造量小：**支持原生的 MySQL 协议，研发工作量小；
+* **改造量小：** 支持原生的 MySQL 协议，研发工作量小；
 
-* **扩展灵活：**搭配使用迁移同步组件轻松实现数据扩展。
+* **扩展灵活：** 搭配使用迁移同步组件轻松实现数据扩展。
 
 ![](https://shardingsphere.apache.org/blog/img/Blog_25_img_2_JD_ShardingSphere_JDBC_en.png)
 
